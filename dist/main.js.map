{"version":3,"sources":["webpack://Mason/webpack/universalModuleDefinition","webpack://Mason/webpack/bootstrap","webpack://Mason/./src/grid/index.js","webpack://Mason/./src/grid/track-sizing.js","webpack://Mason/./src/index.js","webpack://Mason/./src/mason.js","webpack://Mason/./src/utils/constants.js","webpack://Mason/./src/utils/index.js"],"names":["validSizes","updateMatrix","grid","start","end","i","j","x","y","Grid","setup","_tsa","TrackResolver","props","_config","mapping","key","value","_domTree","domTree","_sanitizeTracks","_sanitizeItems","_inflateTracks","_assignCoordinatesToCells","style","config","trackInfo","_fetchTrackInformation","gridTemplateRows","row","nameToLineMap","lineToNameMap","rowTracks","tracks","gridTemplateColumns","col","colTracks","len","splittedTrackInfo","split","nameList","sizeList","sanitizedTracks","startLineNames","endLineNames","filter","track","length","size","toLowerCase","replace","indexOf","isNaN","name","map","trim","push","forEach","items","children","gridAutoFlow","rowNum","Object","keys","colNum","sanitizedItems","autoFlowItems","itemStyle","gridMatrix","freeCells","cell","item","extraRows","rowStart","gridRowStart","rowEnd","gridRowEnd","colStart","gridColumnStart","colEnd","gridColumnEnd","shift","Math","ceil","sizedTracks","minHeightContribution","minWidthContribution","paddingStart","paddingEnd","paddingTop","paddingBottom","width","height","tsa","clear","set","resolveTracks","index","calculatedStyle","baseSize","justifyItems","alignItems","trackWidth","trackHeight","rowTrackdp","colTrackdp","layout","child","justifySelf","CENTER","END","STRETCH","alignSelf","pluckNumber","padding","x2","y2","getDisplayProperty","_updatePositioWRTRoot","replaceWithAbsValue","styleTrack","calculatedTrack","trackSplitAr","trackWithAbsValue","counter","test","updateDomTreeWithResolvedValues","containerStyle","getConfig","rowTrackSum","colTrackSum","userGivenStyles","computeGridLayout","count","compute","gridLayoutEngine","root","getMultiplierOfFr","_frSpaceDistributorHelper","totalSpaceUsed","containerSize","freeSpace","spacePerFrTrack","eligibleTracks","totalFrTrackRatio","multiplier","_intrinsicSpaceDistributorHelper","spacePerIntrinsicTrack","info","_initTrackSize","_initItems","_tracks","trackAr","type","growthLimit","frTracks","intrinsicTracks","Infinity","_items","nonSpanningItemStartIndex","validItems","autoFlow","_getParentSize","sort","a","b","gap1","gap2","parentTracks","widthOfParentTracks","_placeNonSpanningItems","_placeSpanningItems","_distributeFreeSpace","nonSpanningItems","slice","trackIndex","max","spanningItems","trackSizedp","sizeConsumed","sizeLeft","sizePerTrack","availableTracks","hasFrTrack","trackId","LayoutEngine","DISPLAY_GRID","DISPLAY_FLEX","computeLayout","mason","clonedDomTree","cloneObject","calculatedTree","attachLayoutInformation","START","ATOMIC_DATA_TYPE","display","arg","Array","isArray","arr","cloneObj","baseTree","l","arguments","Number","UNDEF"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Mason\"] = factory();\n\telse\n\t\troot[\"Mason\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import { getDisplayProperty, pluckNumber } from \"../utils\";\nimport TrackResolver from \"./track-sizing\";\nimport { CENTER, END, STRETCH } from \"../utils/constants\";\n\nconst validSizes = ['auto'],\n  updateMatrix = (grid, start, end) => {\n    let i,\n      j;\n\n    for (i = start.x; i < end.x; i++) {\n      for (j = start.y; j < end.y; j++) {\n        grid[i][j] = true;\n      }\n    }\n  };\nclass Grid {\n  constructor () {\n    this.setup();\n  }\n\n  setup () {\n    this._tsa = new TrackResolver();\n    this.props = {};\n    this._config = {\n      mapping: {}\n    };\n\n    return this;\n  }\n\n  set (key, value) {\n    this.props[key] = value;\n\n    return this;\n  }\n\n  getProps (key) {\n    return this.props[key];\n  }\n\n  getConfig (key) {\n    return this._config[key];\n  }\n\n  compute (_domTree) {\n    let domTree = _domTree || this.props.domTree;\n\n    this._sanitizeTracks(domTree)\n      ._sanitizeItems(domTree)\n      ._inflateTracks()\n      ._assignCoordinatesToCells(domTree);\n  }\n\n  _sanitizeTracks (_domTree = {}) {\n    let style = _domTree.style,\n      config = this._config,\n      trackInfo;\n\n    trackInfo = this._fetchTrackInformation(style.gridTemplateRows);\n    // trackInfo = this._considerTrackInfoFromChildren(_domTree, trackInfo, 'row');\n    config.mapping.row = {\n      nameToLineMap: trackInfo.nameToLineMap,\n      lineToNameMap: trackInfo.lineToNameMap\n    };\n    config.rowTracks = trackInfo.tracks;\n\n    trackInfo = this._fetchTrackInformation(style.gridTemplateColumns);\n    config.mapping.col = {\n      nameToLineMap: trackInfo.nameToLineMap,\n      lineToNameMap: trackInfo.lineToNameMap\n    };\n    config.colTracks = trackInfo.tracks;\n\n    return this;\n  }\n\n  _fetchTrackInformation (tracks) {\n    let i,\n      len,\n      splittedTrackInfo = tracks.split(' '),\n      nameList,\n      sizeList,\n      sanitizedTracks = [{}],\n      startLineNames,\n      endLineNames,\n      nameToLineMap = {},\n      lineToNameMap = {};\n\n    nameList = splittedTrackInfo.filter(track => {\n      if (typeof track === 'string' && track.length) {\n        len = track.length;\n        if (track[0] === '[' && track[len - 1] === ']') {\n          return true;\n        }\n        return false;\n      }\n      return true;\n    });\n\n    sizeList = splittedTrackInfo.filter(size => {\n      if (!size) return false;\n\n      len = (size + '').toLowerCase().replace(/px|fr/, '');\n      if (validSizes.indexOf(len) >= 0 || !isNaN(len)) {\n        return true;\n      }\n      return false;\n    });\n\n    for (i = 0, len = sizeList.length; i < len; i++) {\n      startLineNames = (nameList[i] && nameList[i].replace(/\\[|\\]/g, '').split(' ').filter(name => name.length).map(name => name.trim())) || [i + 1 + ''];\n      endLineNames = (nameList[i + 1] && nameList[i + 1].replace(/\\[|\\]/g, '').split(' ').filter(name => name.length).map(name => name.trim())) || [i + 2 + ''];\n\n      sanitizedTracks.push({\n        start: i + 1,\n        end: i + 2,\n        size: sizeList[i],\n      });\n\n      // A line can have multiple names but a name can only be assigned to a single line\n      lineToNameMap[i + 1] = startLineNames;\n      lineToNameMap[i + 2] = endLineNames;\n      startLineNames.forEach(name => nameToLineMap[name] = i + 1);\n      endLineNames.forEach(name => nameToLineMap[name] = i + 2);\n      nameToLineMap[i + 1] = i + 1;\n      nameToLineMap[i + 2] = i + 2;\n    }\n\n    return {\n      tracks: sanitizedTracks,\n      nameToLineMap,\n      lineToNameMap\n    };\n  }\n\n  _sanitizeItems (_domTree) {\n    let domTree = (_domTree || this.props.domTree),\n      items = domTree.children || [],\n      mapping = this._config.mapping,\n      gridAutoFlow = domTree.style.gridAutoFlow || 'row',\n      rowNum = Object.keys(mapping.row.lineToNameMap).length,\n      colNum = Object.keys(mapping.col.lineToNameMap).length,\n      sanitizedItems = [],\n      autoFlowItems = [],\n      itemStyle,\n      gridMatrix = [[]],\n      freeCells = [],\n      cell,\n      item,\n      extraRows,\n      i,\n      j,\n      len;\n\n    for (i = 1; i <= rowNum; i++) {\n      gridMatrix.push([]);\n    }\n    for (i = 0, len = items.length; i < len; i++) {\n      itemStyle = items[i].style;\n\n      sanitizedItems.push({\n        ...items[i],\n        rowStart: mapping.row.nameToLineMap[itemStyle.gridRowStart],\n        rowEnd: mapping.row.nameToLineMap[itemStyle.gridRowEnd],\n        colStart: mapping.col.nameToLineMap[itemStyle.gridColumnStart],\n        colEnd: mapping.col.nameToLineMap[itemStyle.gridColumnEnd]\n      });\n      item = sanitizedItems[i];\n      updateMatrix(gridMatrix, {x: item.colStart, y: item.rowStart}, {x: item.colEnd, y: item.rowEnd});\n    }\n\n    autoFlowItems = sanitizedItems.filter(item => (!item.colStart || !item.rowStart));\n\n    /**\n     * @todo: Scope to improve code here.\n     */\n    if (autoFlowItems) {\n      if (gridAutoFlow === 'row') {\n        for (i = 1; i <= rowNum; i++) {\n          for (j = 1; j <= colNum; j++) {\n            if (!gridMatrix[i][j]) {\n              freeCells.push({row: i, col: j});\n            }\n          }\n        }\n\n        while (autoFlowItems.length && freeCells.length) {\n          item = autoFlowItems.shift();\n          cell = freeCells.shift();\n\n          item.rowStart = cell.row;\n          item.colStart = cell.col;\n          item.rowEnd = cell.row + 1;\n          item.colEnd = cell.col + 1;\n        }\n\n        extraRows = Math.ceil(autoFlowItems.length / colNum);\n        if (extraRows) {\n          while (extraRows--) {\n            domTree.style.gridTemplateRows += 'auto ';\n            mapping.row.nameToLineMap[rowNum + 1] = rowNum + 1;\n            mapping.row.nameToLineMap[rowNum + 2] = rowNum + 2;\n            rowNum++;\n            gridMatrix.push([]);\n          }\n          domTree.style.gridTemplateRows = domTree.style.gridTemplateRows.trim();\n  \n          freeCells = [];\n          for (i = 1; i <= rowNum; i++) {\n            for (j = 1; j <= colNum; j++) {\n              if (!gridMatrix[i][j]) {\n                freeCells.push({row: i, col: j});\n              }\n            }\n          }\n          while (autoFlowItems.length) {\n            item = autoFlowItems.shift();\n            cell = freeCells.shift();\n\n            item.rowStart = cell.row;\n            item.colStart = cell.col;\n            item.rowEnd = cell.row + 1;\n            item.colEnd = cell.col + 1;\n          }\n        }\n      }\n    }\n\n    this._config.sanitizedItems = sanitizedItems;\n    return this;\n  }\n\n  _expandTracksIfRequired () {\n    return this;\n  }\n\n  _inflateTracks () {\n    let { sanitizedItems, colTracks, rowTracks } = this._config,\n      sizedTracks,\n      minHeightContribution = 0,\n      minWidthContribution = 0,\n      { domTree } = this.props,\n      { paddingStart, paddingEnd, paddingTop, paddingBottom, width, height } = domTree.style || {},\n      tsa = new TrackResolver();\n\n    if (!isNaN(+width)) {\n      width -= (paddingStart + paddingEnd);\n    }\n    sizedTracks = tsa.clear()\n      .set('tracks', colTracks)\n      .set('items', sanitizedItems.map(item => ({\n        start: item.colStart,\n        end: item.colEnd,\n        size: (item.style && (item.style.minWidthContribution || item.style.width)) || 'auto'\n      })))\n      .set('containerSize', width || 'auto')\n      .resolveTracks();\n\n    colTracks.forEach((track, index) => {\n      track.calculatedStyle = sizedTracks[index];\n      minWidthContribution += sizedTracks[index].baseSize || 0;\n    });\n\n    if (!isNaN(+height)) {\n      height -= (paddingTop + paddingBottom);\n    }\n    sizedTracks = tsa.clear()\n      .set('tracks', rowTracks)\n      .set('items', sanitizedItems.map(item => ({\n        start: item.rowStart,\n        end: item.rowEnd,\n        size: (item.style && (item.style.minHeightContribution || item.style.height)) || 'auto'\n      })))\n      .set('containerSize', height || 'auto')\n      .resolveTracks();\n\n    rowTracks.forEach((track, index) => {\n      track.calculatedStyle = sizedTracks[index];\n      minHeightContribution += sizedTracks[index].baseSize || 0;\n    });\n\n    domTree.style.minHeightContribution = minHeightContribution;\n    domTree.style.minWidthContribution = minWidthContribution;\n    return this;\n  }\n\n  _assignCoordinatesToCells (_domTree) {\n    let domTree = _domTree || this.props.domTree,\n      { sanitizedItems, rowTracks, colTracks } = this._config,\n      item,\n      len,\n      i,\n      { justifyItems, alignItems, paddingStart, paddingEnd, paddingTop, paddingBottom } = domTree.style,\n      trackWidth,\n      trackHeight,\n      width,\n      height,\n      x,\n      y,\n      rowTrackdp = [paddingStart],\n      colTrackdp = [paddingTop];\n\n    for (i = 1, len = rowTracks.length; i < len; i++) {\n      rowTrackdp[i] = rowTrackdp[i - 1] + rowTracks[i].calculatedStyle.baseSize;\n    }\n\n    for (i = 1, len = colTracks.length; i < len; i++) {\n      colTrackdp[i] = colTrackdp[i - 1] + colTracks[i].calculatedStyle.baseSize;\n    }\n    domTree.layout = {\n      x: 0,\n      y: 0,\n      width: isNaN(domTree.style.width) ? colTrackdp[colTrackdp.length - 1] : domTree.style.width,\n      height: isNaN(domTree.style.height) ? rowTrackdp[rowTrackdp.length - 1] : domTree.style.height\n    };\n    (domTree.children || []).forEach((child, index) => {\n      item = sanitizedItems[index];\n      trackWidth = colTrackdp[item.colEnd - 1] - colTrackdp[item.colStart - 1];\n      trackHeight = rowTrackdp[item.rowEnd - 1] - rowTrackdp[item.rowStart - 1];\n      \n      width = isNaN(+child.style.width) ? trackWidth : +child.style.width;\n      height = isNaN(+child.style.height) ? trackHeight : +child.style.height;\n\n      switch (justifyItems || child.style.justifySelf) {\n      case CENTER:\n        x = colTrackdp[item.colStart - 1] + (trackWidth / 2) - (width / 2); break;\n      case END:\n        x = colTrackdp[item.colEnd - 1] - width; break;\n      case STRETCH:\n        width = trackWidth;\n        x = colTrackdp[item.colStart - 1]; break;\n      default:\n        x = colTrackdp[item.colStart - 1];\n      }\n\n      switch (alignItems || child.style.alignSelf) {\n      case CENTER:\n        y = rowTrackdp[item.rowStart - 1] + (trackHeight / 2) - (height / 2); break;\n      case END:\n        y = rowTrackdp[item.rowEnd - 1] - height; break;\n      case STRETCH:\n        height = trackHeight;\n        y = rowTrackdp[item.rowStart - 1]; break;\n      default:\n        y = rowTrackdp[item.rowStart - 1];\n      }\n\n      x += pluckNumber(item.style.paddingStart, item.style.padding, 0);\n      y += pluckNumber(item.style.paddingTop, item.style.padding, 0);\n\n      child.layout = {\n        x,\n        y,\n        x2: x + width,\n        y2: y + height,\n        width,\n        height\n      };\n    });\n  }\n\n  _updatePositioWRTRoot (_domTree) {\n    let domTree = _domTree || this.props.domTree,\n      children = domTree.children || [];\n\n    domTree.layout.x = domTree.layout.x || 0;\n    domTree.layout.y = domTree.layout.y || 0;\n\n    children.forEach(child => {\n      child.layout.x = (child.layout.x || 0) + domTree.layout.x;\n      child.layout.x2 = (child.layout.x2 || 0) + domTree.layout.x;\n      child.layout.y = (child.layout.y || 0) + domTree.layout.y;\n      child.layout.y2 = (child.layout.y2 || 0) + domTree.layout.y;\n\n      if (getDisplayProperty(child) === 'grid') {\n        this._updatePositioWRTRoot(child);\n      }\n    });\n  }\n}\n\nconst replaceWithAbsValue = (styleTrack, calculatedTrack) => {\n    let trackSplitAr = styleTrack.split(' ').filter(track => !!track.trim()),\n      trackWithAbsValue = '',\n      counter = 1;\n\n    trackSplitAr.forEach(track => {\n      if (validSizes.indexOf(track) > -1 || !isNaN(track) || /[0-9]fr/.test(track)) {\n        trackWithAbsValue += calculatedTrack[counter].calculatedStyle.baseSize + ' ';\n        counter++;\n      } else {\n        trackWithAbsValue += track + ' ';\n      }\n    });\n\n    return trackWithAbsValue.trim();\n  },\n  updateDomTreeWithResolvedValues = (domTree, grid) => {\n    let containerStyle = domTree.style,\n      rowTracks = grid.getConfig('rowTracks'),\n      colTracks = grid.getConfig('colTracks'),\n      mapping = grid.getConfig('mapping'),\n      { gridTemplateRows, gridTemplateColumns } = containerStyle,\n      child,\n      i,\n      j,\n      len,\n      rowTrackSum,\n      colTrackSum,\n      rowStart,\n      rowEnd,\n      colStart,\n      colEnd;\n\n    domTree.style.gridTemplateRows = replaceWithAbsValue(gridTemplateRows, rowTracks);\n    domTree.style.gridTemplateColumns = replaceWithAbsValue(gridTemplateColumns, colTracks);\n\n    for (i = 0, len = (domTree.children || []).length; i < len; i++) {\n      child = domTree.children[i];\n      if (getDisplayProperty(child)) {\n        child.style.gridTemplateColumns = child.userGivenStyles.gridTemplateColumns;\n        child.style.gridTemplateRows = child.userGivenStyles.gridTemplateRows;\n        if (isNaN(child.userGivenStyles.width)) {\n          colStart = child.style.gridColumnStart;\n          colEnd = child.style.gridColumnEnd;\n\n          colStart = mapping.col.nameToLineMap[colStart];\n          colEnd = mapping.col.nameToLineMap[colEnd];\n\n          for (j = colStart, colTrackSum = 0; j < colEnd; j++) {\n            colTrackSum += colTracks[j].calculatedStyle.baseSize;\n          }\n          child.style.width = colTrackSum;\n        }\n        if (isNaN(child.userGivenStyles.height)) {\n          rowStart = child.style.gridRowStart;\n          rowEnd = child.style.gridRowEnd;\n\n          rowStart = mapping.row.nameToLineMap[rowStart];\n          rowEnd = mapping.row.nameToLineMap[rowEnd];\n          \n          for (j = rowStart, rowTrackSum = 0; j < rowEnd; j++) {\n            rowTrackSum += rowTracks[j].calculatedStyle.baseSize;\n          }\n          child.style.height = rowTrackSum;\n        }\n      }\n    }\n\n    return domTree;\n  };\n\nfunction computeGridLayout (domTree, count = 1) {\n  let i,\n    len,\n    style = domTree.style,\n    child,\n    grid;\n\n  if (!domTree || !domTree.style) {\n    return;\n  }\n\n  if (!domTree.userGivenStyles) {\n    domTree.style.width = isNaN(domTree.style.width) ? 'auto' : domTree.style.width;\n    domTree.style.height = isNaN(domTree.style.height) ? 'auto' : domTree.style.height;\n\n    style.paddingStart = pluckNumber(style.paddingStart, style.padding, 0);\n    style.paddingEnd = pluckNumber(style.paddingEnd, style.padding, 0);\n    style.paddingTop = pluckNumber(style.paddingTop, style.padding, 0);\n    style.paddingBottom = pluckNumber(style.paddingBottom, style.padding, 0);\n\n    domTree.userGivenStyles = {\n      gridTemplateColumns: domTree.style.gridTemplateColumns,\n      gridTemplateRows: domTree.style.gridTemplateRows,\n      width: domTree.style.width,\n      height: domTree.style.height\n    };\n  }\n\n  for (i = 0, len = (domTree.children && domTree.children.length); i < len; i++) {\n    child = domTree.children[i];\n    if (getDisplayProperty(child)) {\n      this.compute(child);\n    }\n  }\n\n  grid = new Grid();\n  grid.set('domTree', domTree)\n    .compute();\n\n  if (count < 2) {\n    this.gridLayoutEngine(updateDomTreeWithResolvedValues(domTree, grid), 2);\n    domTree.root && grid._updatePositioWRTRoot(domTree);\n  }\n\n  return domTree;\n}\n\nexport {\n  computeGridLayout\n};\n","const getMultiplierOfFr = size => +size.replace(/fr/, ''),\n  _frSpaceDistributorHelper = (tracks, totalSpaceUsed, containerSize) => {\n    let freeSpace,\n      spacePerFrTrack,\n      eligibleTracks,\n      totalFrTrackRatio = 0;\n      \n    if (!tracks.length) {\n      return;\n    }\n\n    tracks.forEach(track => totalFrTrackRatio += track.multiplier);\n\n    freeSpace = containerSize - totalSpaceUsed;\n    spacePerFrTrack = freeSpace / totalFrTrackRatio;\n    \n    eligibleTracks = tracks.filter(track => track.baseSize <= track.multiplier * spacePerFrTrack);\n\n    if (eligibleTracks.length < tracks.length) {\n      tracks.filter(track => track.baseSize > track.multiplier * spacePerFrTrack).forEach(track => totalSpaceUsed += track.baseSize);\n      return _frSpaceDistributorHelper(eligibleTracks, totalSpaceUsed, containerSize);\n    } else {\n      eligibleTracks.forEach(track => track.baseSize = track.multiplier * spacePerFrTrack);\n    }\n  },\n  _intrinsicSpaceDistributorHelper = (tracks, totalSpaceUsed, containerSize) => {\n    let freeSpace,\n      spacePerIntrinsicTrack;\n\n    if (!tracks.length) {\n      return;\n    }\n\n    freeSpace = containerSize - totalSpaceUsed;\n    spacePerIntrinsicTrack = freeSpace / tracks.length;\n\n    tracks.forEach(track => track.baseSize += spacePerIntrinsicTrack);\n  };\n\nclass TrackResolver {\n  constructor (tracks = [], items = [], containerSize = 600) {\n    this.clear();\n\n    this.set('tracks', tracks);\n    this.set('items', items);\n    this.set('containerSize', containerSize);\n    return this;\n  }\n\n  set (key, info) {\n    this.props[key] = info;\n\n    switch (key) {\n    case 'tracks':\n      this._initTrackSize(); break;\n    case 'items':\n      this._initItems(); break;\n    case 'containerSize': \n      this.props[key] = isNaN(+info) ? 0 : +info;\n    }\n    return this;\n  }\n\n  get (key) {\n    return this.props[key];\n  }\n\n  _initTrackSize (_tracks) {\n    let tracks = _tracks || this.props.tracks || [],\n      config = this._config,\n      trackAr = [{}],\n      i,\n      len,\n      size,\n      type,\n      multiplier,\n      baseSize,\n      growthLimit;\n\n    config.frTracks = [];\n    config.intrinsicTracks = [];\n\n    for (i = 1, len = tracks.length; i < len; i++) {\n      size = tracks[i].size;\n\n      multiplier = 1;\n      if (!isNaN(+size)) {\n        baseSize = growthLimit = +size;\n        type = 'fixed';\n      } else if (size.indexOf('fr') > 0) {\n        baseSize = growthLimit = 0;\n        config.frTracks.push(i);\n        type = 'flex';\n        multiplier = getMultiplierOfFr(size);\n      } else {\n        baseSize = 0;\n        growthLimit = Infinity;\n        type = 'intrinsic';\n        config.intrinsicTracks.push(i);\n      }\n\n      trackAr.push({\n        ...tracks[i],\n        type,\n        multiplier,\n        baseSize,\n        growthLimit\n      });\n    }\n\n    return (config.sanitizedTracks = trackAr);\n  }\n\n  _initItems (_items) {\n    let items = _items || this.props.items || [],\n      config = this._config,\n      sanitizedItems = [],\n      nonSpanningItemStartIndex,\n      item,\n      validItems = 0,\n      i,\n      len;\n\n    for (i = 0, len = items.length; i < len; i++) {\n      if (isNaN(items[i].start) || isNaN(items[i].end)) {\n        config.autoFlow.push(items[i]);\n        continue;\n      }\n      sanitizedItems.push({...items[i]});\n      \n      item = sanitizedItems[validItems];\n      validItems++;\n\n      item.size = isNaN(item.size) ? this._getParentSize(item) : +item.size;\n    }\n\n    sanitizedItems.sort(function (a, b) {\n      let gap1 = a.end - a.start,\n        gap2 = b.end - b.start;\n\n      if (gap1 === gap2) {\n        return a.start - b.start;\n      } else return gap1 - gap2;\n    });\n\n    for (i = 0, nonSpanningItemStartIndex = len = sanitizedItems.length; i < len; i++) {\n      if (sanitizedItems[i].end - sanitizedItems[i].start > 1) {\n        nonSpanningItemStartIndex = i;\n        break;\n      }\n    }\n\n    this._config.nonSpanningItemStartIndex = nonSpanningItemStartIndex;\n\n    return (this._config.sanitizedItems = sanitizedItems);\n  }\n\n  _getParentSize (item) {\n    let { sanitizedTracks } = this._config,\n      parentTracks,\n      widthOfParentTracks = 0;\n\n    parentTracks = sanitizedTracks.filter(track => (track.start >= item.start && track.end <= item.end));\n\n    parentTracks.forEach(track => widthOfParentTracks += track.baseSize);\n\n    return (widthOfParentTracks || 0);\n  }\n\n  resolveTracks () {\n    this._placeNonSpanningItems()\n      ._placeSpanningItems()\n      ._distributeFreeSpace();\n\n    return this._config.sanitizedTracks;\n  }\n\n  _placeNonSpanningItems () {\n    let { sanitizedItems, sanitizedTracks, nonSpanningItemStartIndex } = this._config,\n      nonSpanningItems = sanitizedItems.slice(0, nonSpanningItemStartIndex),\n      track,\n      trackIndex;\n\n    nonSpanningItems.forEach(item => {\n      trackIndex = item.start;\n      track = sanitizedTracks[trackIndex];\n\n      if (track.type !== 'fixed') {\n        track.baseSize = Math.max(track.baseSize, item.size);\n        track.growthLimit = Math.max(track.growthLimit, track.baseSize);\n      }\n    });\n\n    return this;\n  }\n\n  _placeSpanningItems () {\n    let { sanitizedItems, sanitizedTracks, nonSpanningItemStartIndex, frTracks } = this._config,\n      spanningItems = sanitizedItems.slice(nonSpanningItemStartIndex),\n      trackSizedp = [0],\n      sizeConsumed,\n      sizeLeft,\n      sizePerTrack,\n      availableTracks,\n      hasFrTrack,\n      i,\n      len;\n\n    if (!spanningItems.length) return this;\n\n    for (i = 1, len = sanitizedTracks.length; i < len; i++) {\n      trackSizedp[i] = trackSizedp[i - 1] + (sanitizedTracks[i].baseSize || 0);\n    }\n\n    spanningItems.forEach(item => {\n      sizeConsumed = trackSizedp[item.end - 1] - trackSizedp[item.start - 1];\n      sizeLeft = Math.max(0, item.size - sizeConsumed);\n\n      if (!sizeLeft) return;\n\n      for (i = item.start, hasFrTrack = false, availableTracks = 0; i < item.end; i++) {\n        if (frTracks.indexOf(i) >= 0) {\n          hasFrTrack = true;\n        }\n        if (sanitizedTracks[i].type !== 'fixed') {\n          availableTracks++;\n        }\n      }\n\n      if (!availableTracks || hasFrTrack) return;\n\n      sizePerTrack = sizeLeft / availableTracks;\n      for (i = item.start; i < item.end; i++) {\n        if (sanitizedTracks[i].type !== 'fixed') {\n          sanitizedTracks[i].baseSize += sizePerTrack;\n        }\n      }\n    });\n    return this;\n  }\n\n  _distributeFreeSpace () {\n    let { frTracks, intrinsicTracks, sanitizedTracks } = this._config,\n      { containerSize } = this.props,\n      totalSpaceUsed = 0;\n\n    sanitizedTracks.forEach(track => totalSpaceUsed += (track.baseSize || 0));\n\n    if (totalSpaceUsed < containerSize) {\n      if (frTracks.length) {\n        frTracks.forEach((trackId, index) => {frTracks[index] = sanitizedTracks[trackId];});\n        frTracks.forEach(track => totalSpaceUsed -= track.baseSize);\n        _frSpaceDistributorHelper(frTracks, totalSpaceUsed, containerSize);\n      } else if (intrinsicTracks.length) {\n        intrinsicTracks.forEach((trackId, index) => {intrinsicTracks[index] = sanitizedTracks[trackId];});\n        _intrinsicSpaceDistributorHelper(intrinsicTracks, totalSpaceUsed, containerSize);\n      }\n    }\n    return this;\n  }\n\n  clear () {\n    this.props = {};\n    this._config = {\n      frTracks: [],\n      intrinsicTracks: [],\n      autoFlow: []\n    };\n\n    return this;\n  }\n}\n\nexport default TrackResolver;\n","import { computeLayout } from './mason';\n\nexport {\n  computeLayout\n};\n","import { getDisplayProperty, cloneObject, attachLayoutInformation } from \"./utils\";\nimport { DISPLAY_GRID, DISPLAY_FLEX } from \"./utils/constants\";\nimport { computeGridLayout } from \"./grid\";\n\nclass LayoutEngine {\n  constructor () {\n    this.gridLayoutEngine = computeGridLayout;\n  }\n\n  compute (domTree) {\n    switch (getDisplayProperty(domTree)) {\n    \n    case DISPLAY_GRID: return this.gridLayoutEngine(domTree);\n    case DISPLAY_FLEX: return this.gridLayoutEngine(domTree);\n    default:\n      // Probably throw unsupported error?\n      return this.gridLayoutEngine(domTree);\n\n    }\n  }\n}\n\nconst computeLayout = (domTree) => {\n  const mason = new LayoutEngine();\n  let clonedDomTree = cloneObject(domTree),\n    calculatedTree;\n\n  clonedDomTree.root = true;\n  calculatedTree = mason.compute(clonedDomTree);\n  attachLayoutInformation(domTree, calculatedTree);\n\n  return domTree;\n};\n\nexport {\n  computeLayout\n};\n","export const DISPLAY_GRID = 'grid';\nexport const DISPLAY_FLEX = 'flex';\nexport const CENTER = 'center';\nexport const START = 'start';\nexport const END = 'end';\nexport const STRETCH = 'stretch';\nexport const ATOMIC_DATA_TYPE = ['string', 'number', 'function', 'boolean', 'undefined'];","import { ATOMIC_DATA_TYPE } from \"./constants\";\n\nconst getDisplayProperty = (domTree) => {\n    return domTree.style && domTree.style.display;\n  },\n  cloneObject = (arg) => {\n    if ((ATOMIC_DATA_TYPE.indexOf(typeof arg) > -1) || arg === null) {\n      return arg;\n    }\n\n    if (Array.isArray(arg)) {\n      let i,\n        len,\n        arr = [];\n\n      for (i = 0, len = arg.length; i < len; i++) {\n        arr.push(cloneObject(arg[i]));\n      }\n\n      return arr;\n    } else if (typeof arg === 'object') {\n      let cloneObj = {},\n        key;\n\n      for (key in arg) {\n        cloneObj[key] = cloneObject(arg[key]);\n      }\n\n      return cloneObj;\n    }\n  },\n  attachLayoutInformation = (baseTree = {}, calculatedTree = {}) => {\n    let i,\n      len;\n\n    baseTree.layout = calculatedTree.layout;\n\n    for (i = 0, len = (baseTree.children || []).length; i < len; i++) {\n      attachLayoutInformation(baseTree.children[i], calculatedTree.children[i]);\n    }\n  },\n  pluckNumber = function () {\n    var arg,\n      i,\n      l;\n\n    for (i = 0, l = arguments.length; i < l; i += 1) {\n      arg = arguments[i];\n      if (!arg && arg !== false && arg !== 0) {\n        continue;\n      } else if (isNaN(arg = Number(arg))) {\n        continue;\n      }\n      return arg;\n    }\n    return UNDEF;\n  };\n\nexport {\n  cloneObject,\n  attachLayoutInformation,\n  getDisplayProperty,\n  pluckNumber\n};"],"sourceRoot":""}