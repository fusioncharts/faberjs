{"version":3,"sources":["webpack://Mason/webpack/universalModuleDefinition","webpack://Mason/webpack/bootstrap","webpack://Mason/./src/grid/helpers/repeatResolver.js","webpack://Mason/./src/grid/index.js","webpack://Mason/./src/grid/track-sizing.js","webpack://Mason/./src/index.js","webpack://Mason/./src/mason.js","webpack://Mason/./src/utils/constants.js","webpack://Mason/./src/utils/index.js"],"names":["repeatDetectionRegex","parseRepeatFunction","repeatStr","split","map","arg","trim","repeatResolver","domTree","parentInfo","style","children","rowWidth","numOfRows","itemInARow","repeatStyle","newGridTemplateColumns","newGridTemplateRows","i","len","height","itemWidth","width","isNaN","forEach","child","Math","max","length","ceil","gridTemplateColumns","gridTemplateRows","validSizes","minmaxRegex","templateSplitRegex","getUCFirstString","str","charAt","toUpperCase","slice","validNestedGrid","tree","test","getCleanSize","size","sizeAr","getItemSize","items","dimension","filteredItems","templateCol","parsedDim","trackDir","item","getDisplayProperty","start","end","updateMatrix","grid","j","x","y","Grid","setup","_tsa","TrackResolver","props","_config","mapping","key","value","_domTree","_sanitizeTracks","_sanitizeItems","_inflateTracks","_assignCoordinatesToCells","repeatResolvedTracks","config","trackInfo","_fetchTrackInformation","row","nameToLineMap","lineToNameMap","rowTracks","tracks","col","colTracks","splittedTrackInfo","nameList","sizeList","sanitizedTracks","startLineNames","endLineNames","filter","track","toLowerCase","replace","indexOf","name","push","gridAutoFlow","rowNum","Object","keys","colNum","sanitizedItems","autoFlowItems","itemStyle","gridMatrix","freeCells","cell","extraRows","rowStart","gridRowStart","rowEnd","gridRowEnd","colStart","gridColumnStart","colEnd","gridColumnEnd","shift","sizedTracks","minHeightContribution","minWidthContribution","paddingStart","paddingEnd","paddingTop","paddingBottom","tsa","clear","set","resolveTracks","index","calculatedStyle","baseSize","_solveUnresolvedChildren","childrenWithRepeatConfiguration","unResolvedChildren","parentReference","getProps","colTrackDp","resolvedTracks","trackWidth","parsedWidthOfItem","gridLayoutEngine","justifyItems","alignItems","trackHeight","rowTrackdp","colTrackdp","layout","justifySelf","CENTER","END","STRETCH","alignSelf","pluckNumber","padding","x2","y2","replaceWithAbsValue","styleTrack","calculatedTrack","trackSplitAr","trackWithAbsValue","counter","updateDomTreeWithResolvedValues","containerStyle","getConfig","rowTrackSum","colTrackSum","userGivenStyles","computeGridLayout","count","compute","getMultiplierOfFr","_frSpaceDistributorHelper","totalSpaceUsed","containerSize","freeSpace","spacePerFrTrack","eligibleTracks","totalFrTrackRatio","multiplier","_intrinsicSpaceDistributorHelper","spacePerIntrinsicTrack","frozenTrack","minMaxTracks","growthLimit","type","Infinity","sort","a","b","gap1","gap2","min","frozen","info","_initTrackSize","_initItems","_tracks","trackAr","frTracks","intrinsicTracks","Array","isArray","_items","nonSpanningItemStartIndex","validItems","autoFlow","_getParentSize","parentTracks","widthOfParentTracks","_placeNonSpanningItems","_placeSpanningItems","_distributeFreeSpace","nonSpanningItems","trackIndex","spanningItems","trackSizedp","sizeConsumed","sizeLeft","sizePerTrack","availableTracks","hasFrTrack","trackId","LayoutEngine","DISPLAY_GRID","DISPLAY_FLEX","computeLayout","mason","clonedDomTree","cloneObject","calculatedTree","root","attachLayoutInformation","START","ATOMIC_DATA_TYPE","display","arr","cloneObj","baseTree","l","arguments","Number","UNDEF"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Mason\"] = factory();\n\telse\n\t\troot[\"Mason\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const repeatDetectionRegex = /repeat\\(/g,\n  parseRepeatFunction = repeatStr => {\n    return repeatStr.split(/\\(|\\)/g)[1].split(',').map(arg => arg && arg.trim());\n  };\n\nfunction repeatResolver (domTree, parentInfo) {\n  let { style, children } = domTree,\n    rowWidth = 0,\n    numOfRows,\n    itemInARow = 0,\n    // itemWidth,\n    repeatStyle = 'auto-fit',\n    newGridTemplateColumns = '',\n    newGridTemplateRows = '',\n    i,\n    len,\n    height = 0,\n    { itemWidth, width } = parentInfo;\n\n  width = isNaN(+width) ? 0 : +width;\n\n  children.forEach(child => (height = Math.max(height, +child.style.height || 0)))\n  // [repeatStyle, itemWidth] = parseRepeatFunction(gridTemplateColumns);\n  itemWidth = +itemWidth;\n\n  if (repeatStyle === 'auto-fit') {\n    rowWidth += itemWidth;\n    newGridTemplateColumns += (itemWidth + ' ');\n    itemInARow = 1;\n    for (i = 1, len = children.length; i < len; i++) {\n      if (rowWidth + itemWidth > width) {\n        break;\n      }\n      rowWidth += itemWidth;\n      newGridTemplateColumns += (itemWidth + ' ');\n    }\n\n    itemInARow = i;\n    numOfRows = Math.ceil(len / itemInARow);\n\n    while (numOfRows--) {\n      newGridTemplateRows += height + ' ';\n    }\n  }\n\n  return {\n    gridTemplateColumns: newGridTemplateColumns.trim(),\n    gridTemplateRows: newGridTemplateRows.trim()\n  }\n}\n\nexport {\n  repeatResolver\n};\n","import { getDisplayProperty, pluckNumber } from \"../utils\";\nimport TrackResolver from \"./track-sizing\";\nimport { CENTER, END, STRETCH } from \"../utils/constants\";\nimport { repeatResolver } from \"./helpers/repeatResolver\";\n\nconst validSizes = ['auto'],\n  minmaxRegex = /minmax/,\n  // repeatFunctionRegex = /repeat\\(/g,\n  // templateSplitRegex = /\\s(\\[.*\\])*(\\(.*\\))*/g,\n  templateSplitRegex = ' ',\n  getUCFirstString = str => (str.charAt(0).toUpperCase() + str.slice(1)),\n  validNestedGrid = tree => {\n    let { gridTemplateColumns, gridTemplateRows } = tree.style || {};\n\n    if (/repeat\\(/g.test(gridTemplateColumns) || /repeat\\(/g.test(gridTemplateRows)) {\n      return false;\n    }\n    return true;\n  },\n  parseRepeatFunction = repeatStr => {\n    return repeatStr.split(/\\(|\\)/g)[1].split(',').map(arg => arg && arg.trim());\n  },\n  getCleanSize = size => {\n    size = size.trim();\n    if (size === 'auto') return size;\n    if (!isNaN(+size)) return +size;\n\n    if (minmaxRegex.test(size)) {\n      let sizeAr = size.split(/\\(|\\)/g)[1].split(',');\n\n      return [\n        sizeAr[0].trim(),\n        sizeAr[1].trim()\n      ];\n    }\n\n    return size;\n  },\n  getItemSize = (items, dimension) => {\n    let filteredItems,\n      templateCol,\n      parsedDim = getUCFirstString(dimension),\n      size,\n      trackDir = dimension === 'width' ? 'col' : 'row';\n\n    filteredItems = items.map(item => {\n      templateCol = item.style['gridTemplate' + getUCFirstString(trackDir === 'col' ? 'columns' : 'rows')];\n      if (getDisplayProperty(item) === 'grid' && /repeat\\(/g.test(templateCol)) {\n        size = parseRepeatFunction(templateCol)[1];\n      } else {\n        size = item.style['min' + parsedDim + 'Contribution'] || item.style[dimension] || 'auto';\n      }\n\n      return {\n        start: item[trackDir + 'Start'],\n        end: item[trackDir + 'End'],\n        size\n      }\n    });\n    return filteredItems;\n  },\n  updateMatrix = (grid, start, end) => {\n    let i,\n      j;\n\n    for (i = start.x; i < end.x; i++) {\n      for (j = start.y; j < end.y; j++) {\n        grid[i][j] = true;\n      }\n    }\n  };\nclass Grid {\n  constructor () {\n    this.setup();\n  }\n\n  setup () {\n    this._tsa = new TrackResolver();\n    this.props = {};\n    this._config = {\n      mapping: {}\n    };\n\n    return this;\n  }\n\n  set (key, value) {\n    this.props[key] = value;\n\n    return this;\n  }\n\n  getProps (key) {\n    return this.props[key];\n  }\n\n  getConfig (key) {\n    return this._config[key];\n  }\n\n  compute (_domTree) {\n    let domTree = _domTree || this.props.domTree;\n\n    this._sanitizeTracks(domTree)\n      ._sanitizeItems(domTree)\n      ._inflateTracks()\n      ._assignCoordinatesToCells(domTree);\n  }\n\n  _sanitizeTracks (_domTree = {}) {\n    let style = _domTree.style,\n      { gridTemplateRows, gridTemplateColumns } = style,\n      repeatResolvedTracks,\n      config = this._config,\n      trackInfo;\n\n    trackInfo = this._fetchTrackInformation(gridTemplateRows);\n    config.mapping.row = {\n      nameToLineMap: trackInfo.nameToLineMap,\n      lineToNameMap: trackInfo.lineToNameMap\n    };\n    config.rowTracks = trackInfo.tracks;\n\n    trackInfo = this._fetchTrackInformation(gridTemplateColumns);\n    config.mapping.col = {\n      nameToLineMap: trackInfo.nameToLineMap,\n      lineToNameMap: trackInfo.lineToNameMap\n    };\n    config.colTracks = trackInfo.tracks;\n\n    return this;\n  }\n\n  _fetchTrackInformation (tracks = 'auto') {\n    let i,\n      len,\n      splittedTrackInfo = tracks.split(templateSplitRegex),\n      nameList,\n      sizeList,\n      sanitizedTracks = [{}],\n      startLineNames,\n      endLineNames,\n      nameToLineMap = {},\n      lineToNameMap = {};\n\n    nameList = splittedTrackInfo.filter(track => {\n      if (track && typeof track === 'string' && track.length) {\n        len = track.length;\n        if (track[0] === '[' && track[len - 1] === ']') {\n          return true;\n        }\n        return false;\n      }\n      return true;\n    });\n\n    sizeList = splittedTrackInfo.filter(size => {\n      if (!size) return false;\n\n      len = (size + '').toLowerCase().replace(/px|fr/, '');\n      if (validSizes.indexOf(len) >= 0 || minmaxRegex.test(len) || !isNaN(len)) {\n        return true;\n      }\n      return false;\n    }).map(size => getCleanSize(size));\n\n    for (i = 0, len = sizeList.length; i < len; i++) {\n      startLineNames = (nameList[i] && nameList[i].replace(/\\[|\\]/g, '').split(' ').filter(name => name.length).map(name => name.trim())) || [i + 1 + ''];\n      endLineNames = (nameList[i + 1] && nameList[i + 1].replace(/\\[|\\]/g, '').split(' ').filter(name => name.length).map(name => name.trim())) || [i + 2 + ''];\n\n      sanitizedTracks.push({\n        start: i + 1,\n        end: i + 2,\n        size: sizeList[i],\n      });\n\n      // A line can have multiple names but a name can only be assigned to a single line\n      lineToNameMap[i + 1] = startLineNames;\n      lineToNameMap[i + 2] = endLineNames;\n      startLineNames.forEach(name => nameToLineMap[name] = i + 1);\n      endLineNames.forEach(name => nameToLineMap[name] = i + 2);\n      nameToLineMap[i + 1] = i + 1;\n      nameToLineMap[i + 2] = i + 2;\n    }\n\n    return {\n      tracks: sanitizedTracks,\n      nameToLineMap,\n      lineToNameMap\n    };\n  }\n\n  _sanitizeItems (_domTree) {\n    let domTree = (_domTree || this.props.domTree),\n      items = domTree.children || [],\n      mapping = this._config.mapping,\n      gridAutoFlow = domTree.style.gridAutoFlow || 'row',\n      rowNum = Object.keys(mapping.row.lineToNameMap).length,\n      colNum = Object.keys(mapping.col.lineToNameMap).length,\n      sanitizedItems = [],\n      autoFlowItems = [],\n      itemStyle,\n      gridMatrix = [[]],\n      freeCells = [],\n      cell,\n      item,\n      extraRows,\n      i,\n      j,\n      len;\n\n    for (i = 1; i <= rowNum; i++) {\n      gridMatrix.push([]);\n    }\n    for (i = 0, len = items.length; i < len; i++) {\n      itemStyle = items[i].style;\n\n      sanitizedItems.push({\n        ...items[i],\n        rowStart: mapping.row.nameToLineMap[itemStyle.gridRowStart],\n        rowEnd: mapping.row.nameToLineMap[itemStyle.gridRowEnd],\n        colStart: mapping.col.nameToLineMap[itemStyle.gridColumnStart],\n        colEnd: mapping.col.nameToLineMap[itemStyle.gridColumnEnd]\n      });\n      item = sanitizedItems[i];\n      updateMatrix(gridMatrix, {x: item.colStart, y: item.rowStart}, {x: item.colEnd, y: item.rowEnd});\n    }\n\n    autoFlowItems = sanitizedItems.filter(item => (!item.colStart || !item.rowStart));\n\n    /**\n     * @todo: Scope to improve code here.\n     */\n    if (autoFlowItems) {\n      if (gridAutoFlow === 'row') {\n        for (i = 1; i < rowNum; i++) {\n          for (j = 1; j < colNum; j++) {\n            if (!gridMatrix[i][j]) {\n              freeCells.push({row: i, col: j});\n            }\n          }\n        }\n\n        while (autoFlowItems.length && freeCells.length) {\n          item = autoFlowItems.shift();\n          cell = freeCells.shift();\n\n          item.rowStart = cell.row;\n          item.colStart = cell.col;\n          item.rowEnd = cell.row + 1;\n          item.colEnd = cell.col + 1;\n        }\n\n        extraRows = Math.ceil(autoFlowItems.length / colNum);\n        if (extraRows) {\n          while (extraRows--) {\n            domTree.style.gridTemplateRows += 'auto ';\n            mapping.row.nameToLineMap[rowNum + 1] = rowNum + 1;\n            mapping.row.nameToLineMap[rowNum + 2] = rowNum + 2;\n            rowNum++;\n            gridMatrix.push([]);\n          }\n          domTree.style.gridTemplateRows = domTree.style.gridTemplateRows.trim();\n  \n          freeCells = [];\n          for (i = 1; i <= rowNum; i++) {\n            for (j = 1; j <= colNum; j++) {\n              if (!gridMatrix[i][j]) {\n                freeCells.push({row: i, col: j});\n              }\n            }\n          }\n          while (autoFlowItems.length) {\n            item = autoFlowItems.shift();\n            cell = freeCells.shift();\n\n            item.rowStart = cell.row;\n            item.colStart = cell.col;\n            item.rowEnd = cell.row + 1;\n            item.colEnd = cell.col + 1;\n          }\n        }\n      }\n    }\n\n    this._config.sanitizedItems = sanitizedItems;\n    return this;\n  }\n\n  _expandTracksIfRequired () {\n    return this;\n  }\n\n  _inflateTracks () {\n    let { sanitizedItems, colTracks, rowTracks } = this._config,\n      sizedTracks,\n      minHeightContribution = 0,\n      minWidthContribution = 0,\n      { domTree } = this.props,\n      { paddingStart, paddingEnd, paddingTop, paddingBottom, width, height } = domTree.style || {},\n      tsa = new TrackResolver();\n\n    if (!isNaN(+width)) {\n      width -= (paddingStart + paddingEnd);\n    }\n    sizedTracks = tsa.clear()\n      .set('tracks', colTracks)\n      .set('items', getItemSize(sanitizedItems, 'width'))\n      .set('containerSize', width || 'auto')\n      .resolveTracks();\n\n    colTracks.forEach((track, index) => {\n      track.calculatedStyle = sizedTracks[index];\n      minWidthContribution += sizedTracks[index].baseSize || 0;\n    });\n\n    this._solveUnresolvedChildren();\n\n    if (!isNaN(+height)) {\n      height -= (paddingTop + paddingBottom);\n    }\n    sizedTracks = tsa.clear()\n      .set('tracks', rowTracks)\n      .set('items', getItemSize(sanitizedItems, 'height'))\n      .set('containerSize', height || 'auto')\n      .resolveTracks();\n\n    rowTracks.forEach((track, index) => {\n      track.calculatedStyle = sizedTracks[index];\n      minHeightContribution += sizedTracks[index].baseSize || 0;\n    });\n\n    domTree.style.minHeightContribution = minHeightContribution;\n    domTree.style.minWidthContribution = minWidthContribution;\n    return this;\n  }\n\n  _solveUnresolvedChildren (_domTree) {\n    let domTree = _domTree || this.props.domTree,\n      childrenWithRepeatConfiguration = (domTree.unResolvedChildren || []).filter(child => /repeat\\(/g.test(child.style.gridTemplateColumns)\n      || /repeat\\(/g.test(child.style.gridTemplateRows)),\n      { colTracks, mapping } = this._config,\n      parentReference = this.getProps('parent'),\n      colTrackDp = [0],\n      resolvedTracks,\n      i,\n      len,\n      trackWidth,\n      parentInfo,\n      parsedWidthOfItem,\n      colStart,\n      colEnd;\n\n    if (!childrenWithRepeatConfiguration.length) {\n      return this;\n    }\n\n    for (i = 1, len = colTracks.length; i < len; i++) {\n      colTrackDp[i] = colTrackDp[i - 1] + colTracks[i].calculatedStyle.baseSize;\n    }\n\n    childrenWithRepeatConfiguration.forEach(child => {\n      // if (repeatFunctionRegex.test(child.style.gridTemplateColumns)) {\n      parsedWidthOfItem = parseRepeatFunction(child.style.gridTemplateColumns)[1];\n      colStart = mapping.col.nameToLineMap[child.style.gridColumnStart];\n      colEnd = mapping.col.nameToLineMap[child.style.gridColumnEnd];\n      \n      trackWidth = colTrackDp[colEnd - 1 ] - colTrackDp[colStart - 1];\n      parentInfo = {\n        itemWidth: parsedWidthOfItem,\n        width: trackWidth\n      };\n\n      resolvedTracks = repeatResolver(child, parentInfo);\n\n      child.style.gridTemplateColumns = resolvedTracks.gridTemplateColumns;\n      child.style.gridTemplateRows = resolvedTracks.gridTemplateRows;\n\n      parentReference.gridLayoutEngine(child);\n      // }\n    });\n  }\n\n  _assignCoordinatesToCells (_domTree) {\n    let domTree = _domTree || this.props.domTree,\n      { sanitizedItems, rowTracks, colTracks } = this._config,\n      item,\n      len,\n      i,\n      { justifyItems, alignItems, paddingStart, paddingEnd, paddingTop, paddingBottom } = domTree.style,\n      trackWidth,\n      trackHeight,\n      width,\n      height,\n      x,\n      y,\n      rowTrackdp = [paddingStart],\n      colTrackdp = [paddingTop];\n\n    for (i = 1, len = rowTracks.length; i < len; i++) {\n      rowTrackdp[i] = rowTrackdp[i - 1] + rowTracks[i].calculatedStyle.baseSize;\n    }\n\n    for (i = 1, len = colTracks.length; i < len; i++) {\n      colTrackdp[i] = colTrackdp[i - 1] + colTracks[i].calculatedStyle.baseSize;\n    }\n    domTree.layout = {\n      x: 0,\n      y: 0,\n      width: isNaN(domTree.style.width) ? colTrackdp[colTrackdp.length - 1] : domTree.style.width,\n      height: isNaN(domTree.style.height) ? rowTrackdp[rowTrackdp.length - 1] : domTree.style.height\n    };\n    (domTree.children || []).forEach((child, index) => {\n      item = sanitizedItems[index];\n      trackWidth = colTrackdp[item.colEnd - 1] - colTrackdp[item.colStart - 1];\n      trackHeight = rowTrackdp[item.rowEnd - 1] - rowTrackdp[item.rowStart - 1];\n      \n      width = isNaN(+child.style.width) ? trackWidth : +child.style.width;\n      height = isNaN(+child.style.height) ? trackHeight : +child.style.height;\n\n      switch (justifyItems || child.style.justifySelf) {\n      case CENTER:\n        x = colTrackdp[item.colStart - 1] + (trackWidth / 2) - (width / 2); break;\n      case END:\n        x = colTrackdp[item.colEnd - 1] - width; break;\n      case STRETCH:\n        width = trackWidth;\n        x = colTrackdp[item.colStart - 1]; break;\n      default:\n        x = colTrackdp[item.colStart - 1];\n      }\n\n      switch (alignItems || child.style.alignSelf) {\n      case CENTER:\n        y = rowTrackdp[item.rowStart - 1] + (trackHeight / 2) - (height / 2); break;\n      case END:\n        y = rowTrackdp[item.rowEnd - 1] - height; break;\n      case STRETCH:\n        height = trackHeight;\n        y = rowTrackdp[item.rowStart - 1]; break;\n      default:\n        y = rowTrackdp[item.rowStart - 1];\n      }\n\n      x += pluckNumber(item.style.paddingStart, item.style.padding, 0);\n      y += pluckNumber(item.style.paddingTop, item.style.padding, 0);\n\n      child.layout = {\n        x,\n        y,\n        x2: x + width,\n        y2: y + height,\n        width,\n        height\n      };\n    });\n  }\n}\n\nconst replaceWithAbsValue = (styleTrack = '', calculatedTrack) => {\n    let trackSplitAr = styleTrack.split(templateSplitRegex).filter(track => track && !!track.trim()),\n      trackWithAbsValue = '',\n      counter = 1;\n\n    if (trackSplitAr.length && !(/repeat\\(/.test(styleTrack))) {\n      trackSplitAr.forEach(track => {\n        if (validSizes.indexOf(track) > -1 || /[0-9]fr/.test(track) || minmaxRegex.test(track) || !isNaN(track)) {\n          trackWithAbsValue += calculatedTrack[counter].calculatedStyle.baseSize + ' ';\n          counter++;\n        } else {\n          trackWithAbsValue += track + ' ';\n        }\n      });\n    } else {\n      calculatedTrack.forEach(track => {\n        if (isNaN(track.calculatedStyle.baseSize)) return;\n        \n        trackWithAbsValue += (track.calculatedStyle.baseSize + ' ');\n      });\n    }\n\n    return trackWithAbsValue.trim();\n  },\n  updateDomTreeWithResolvedValues = (domTree, grid) => {\n    let containerStyle = domTree.style,\n      rowTracks = grid.getConfig('rowTracks'),\n      colTracks = grid.getConfig('colTracks'),\n      mapping = grid.getConfig('mapping'),\n      { gridTemplateRows, gridTemplateColumns } = containerStyle,\n      child,\n      i,\n      j,\n      len,\n      rowTrackSum,\n      colTrackSum,\n      rowStart,\n      rowEnd,\n      colStart,\n      colEnd;\n\n    domTree.style.gridTemplateRows = replaceWithAbsValue(gridTemplateRows, rowTracks);\n    domTree.style.gridTemplateColumns = replaceWithAbsValue(gridTemplateColumns, colTracks);\n\n    for (i = 0, len = (domTree.children || []).length; i < len; i++) {\n      child = domTree.children[i];\n      if (getDisplayProperty(child)) {\n        child.style.gridTemplateColumns = child.userGivenStyles.gridTemplateColumns;\n        child.style.gridTemplateRows = child.userGivenStyles.gridTemplateRows;\n        if (isNaN(child.userGivenStyles.width)) {\n          colStart = child.style.gridColumnStart;\n          colEnd = child.style.gridColumnEnd;\n\n          colStart = mapping.col.nameToLineMap[colStart];\n          colEnd = mapping.col.nameToLineMap[colEnd];\n\n          for (j = colStart, colTrackSum = 0; j < colEnd; j++) {\n            colTrackSum += colTracks[j].calculatedStyle.baseSize;\n          }\n          child.style.width = colTrackSum;\n        }\n        if (isNaN(child.userGivenStyles.height)) {\n          rowStart = child.style.gridRowStart;\n          rowEnd = child.style.gridRowEnd;\n\n          rowStart = mapping.row.nameToLineMap[rowStart];\n          rowEnd = mapping.row.nameToLineMap[rowEnd];\n          \n          for (j = rowStart, rowTrackSum = 0; j < rowEnd; j++) {\n            rowTrackSum += rowTracks[j].calculatedStyle.baseSize;\n          }\n          child.style.height = rowTrackSum;\n        }\n      }\n    }\n\n    return domTree;\n  };\n\nfunction computeGridLayout (domTree, count = 1) {\n  let i,\n    len,\n    style = domTree.style,\n    child,\n    grid;\n\n  if (!domTree || !domTree.style) {\n    return;\n  }\n\n  if (!domTree.userGivenStyles) {\n    domTree.style.width = isNaN(domTree.style.width) ? 'auto' : domTree.style.width;\n    domTree.style.height = isNaN(domTree.style.height) ? 'auto' : domTree.style.height;\n\n    style.paddingStart = pluckNumber(style.paddingStart, style.padding, 0);\n    style.paddingEnd = pluckNumber(style.paddingEnd, style.padding, 0);\n    style.paddingTop = pluckNumber(style.paddingTop, style.padding, 0);\n    style.paddingBottom = pluckNumber(style.paddingBottom, style.padding, 0);\n\n    domTree.userGivenStyles = {\n      gridTemplateColumns: domTree.style.gridTemplateColumns,\n      gridTemplateRows: domTree.style.gridTemplateRows,\n      width: domTree.style.width,\n      height: domTree.style.height\n    };\n  }\n\n  domTree.unResolvedChildren = [];\n  for (i = 0, len = (domTree.children && domTree.children.length); i < len; i++) {\n    child = domTree.children[i];\n    if (getDisplayProperty(child)) {\n      if (validNestedGrid(child)) {\n        this.compute(child);\n      } else {\n        domTree.unResolvedChildren.push(child);\n      }\n    }\n  }\n\n  grid = new Grid();\n  grid.set('domTree', domTree)\n    .set('parent', this)\n    .compute();\n\n  if (count < 2) {\n    this.gridLayoutEngine(updateDomTreeWithResolvedValues(domTree, grid), 2);\n  }\n\n  return domTree;\n}\n\nexport {\n  computeGridLayout\n};\n","import { pluckNumber } from \"../utils\";\n\nconst getMultiplierOfFr = size => +size.replace(/fr/, ''),\n  _frSpaceDistributorHelper = (tracks, totalSpaceUsed, containerSize) => {\n    let freeSpace,\n      spacePerFrTrack,\n      eligibleTracks,\n      totalFrTrackRatio = 0;\n      \n    if (!tracks.length) {\n      return;\n    }\n\n    tracks.forEach(track => totalFrTrackRatio += track.multiplier);\n\n    freeSpace = containerSize - totalSpaceUsed;\n    spacePerFrTrack = freeSpace / totalFrTrackRatio;\n    \n    eligibleTracks = tracks.filter(track => track.baseSize <= track.multiplier * spacePerFrTrack);\n\n    if (eligibleTracks.length < tracks.length) {\n      tracks.filter(track => track.baseSize > track.multiplier * spacePerFrTrack).forEach(track => totalSpaceUsed += track.baseSize);\n      return _frSpaceDistributorHelper(eligibleTracks, totalSpaceUsed, containerSize);\n    } else {\n      eligibleTracks.forEach(track => track.baseSize = track.multiplier * spacePerFrTrack);\n    }\n  },\n  _intrinsicSpaceDistributorHelper = (tracks, totalSpaceUsed, containerSize) => {\n    let freeSpace,\n      spacePerIntrinsicTrack,\n      i,\n      len,\n      frozenTrack = 0,\n      minMaxTracks,\n      growthLimit,\n      baseSize;\n      \n    if (!tracks.length) {\n      return;\n    }\n    minMaxTracks = tracks.filter(track => track.type === 'minmax' && track.growthLimit !== Infinity);\n    freeSpace = containerSize - totalSpaceUsed;\n    \n    minMaxTracks.sort(function (a, b) {\n      let gap1 = a.growthLimit - a.baseSize,\n      gap2 = b.growthLimit - b.baseSize;\n      \n      return gap1 - gap2;\n    });\n    \n    len = minMaxTracks.length;\n    while (frozenTrack < len && freeSpace) {\n      spacePerIntrinsicTrack = freeSpace / ((minMaxTracks.length - frozenTrack) || 1);\n      /**\n       * @todo: remove the frozen tracks.\n       */\n      for (i = 0, len = minMaxTracks.length; i <  len; i++) {\n        growthLimit = minMaxTracks[i].growthLimit;\n        \n        baseSize = Math.min(spacePerIntrinsicTrack + minMaxTracks[i].baseSize, growthLimit);\n        freeSpace -= (baseSize - minMaxTracks[i].baseSize);\n        minMaxTracks[i].baseSize = baseSize;\n\n        if (growthLimit === baseSize && !minMaxTracks[i].frozen) {\n          minMaxTracks[i].frozen = true;\n          frozenTrack++;\n        }\n      }\n    }\n\n    tracks = tracks.filter(track => (track.type === 'minmax' && track.growthLimit === Infinity) || track.type !== 'minmax');\n    spacePerIntrinsicTrack = freeSpace / tracks.length;\n\n    tracks.forEach(track => track.baseSize += spacePerIntrinsicTrack);\n  };\n\nclass TrackResolver {\n  constructor (tracks = [], items = [], containerSize = 600) {\n    this.clear();\n\n    this.set('tracks', tracks);\n    this.set('items', items);\n    this.set('containerSize', containerSize);\n    return this;\n  }\n\n  set (key, info) {\n    this.props[key] = info;\n\n    switch (key) {\n    case 'tracks':\n      this._initTrackSize(); break;\n    case 'items':\n      this._initItems(); break;\n    case 'containerSize': \n      this.props[key] = isNaN(+info) ? 0 : +info;\n    }\n    return this;\n  }\n\n  get (key) {\n    return this.props[key];\n  }\n\n  _initTrackSize (_tracks) {\n    let tracks = _tracks || this.props.tracks || [],\n      config = this._config,\n      trackAr = [{}],\n      i,\n      len,\n      size,\n      type,\n      multiplier,\n      baseSize,\n      growthLimit;\n\n    config.frTracks = [];\n    config.intrinsicTracks = [];\n\n    for (i = 1, len = tracks.length; i < len; i++) {\n      size = tracks[i].size;\n\n      multiplier = 1;\n      if (Array.isArray(size)) {\n        baseSize = +size[0] || 0;\n\n        if (size[1].indexOf('fr') > 0 || size[0].indexOf('fr') > 0) {\n          growthLimit = Infinity;\n          config.frTracks.push(i);\n          type = 'minmax';\n        } else if (size[1] === 'auto' || size[0] === 'auto') {\n          growthLimit = Infinity;\n          config.intrinsicTracks.push(i);\n          type = 'minmax';\n        } else if (!isNaN(+size[0]) && !isNaN(+size[1])) {\n          growthLimit = Math.max(+size[0], +size[1]);\n          baseSize = Math.min(+size[0], +size[1]);\n          config.intrinsicTracks.push(i);\n          type = 'minmax'\n        }\n      } else if (!isNaN(+size)) {\n        baseSize = growthLimit = +size;\n        type = 'fixed';\n      } else if (size.indexOf('fr') > 0) {\n        baseSize = 0\n        growthLimit = Infinity;\n        config.frTracks.push(i);\n        type = 'flex';\n        multiplier = getMultiplierOfFr(size);\n      } else {\n        baseSize = 0;\n        growthLimit = Infinity;\n        type = 'intrinsic';\n        config.intrinsicTracks.push(i);\n      }\n\n      trackAr.push({\n        ...tracks[i],\n        type,\n        multiplier,\n        baseSize,\n        growthLimit\n      });\n    }\n\n    return (config.sanitizedTracks = trackAr);\n  }\n\n  _initItems (_items) {\n    let items = _items || this.props.items || [],\n      config = this._config,\n      sanitizedItems = [],\n      nonSpanningItemStartIndex,\n      item,\n      validItems = 0,\n      i,\n      len;\n\n    for (i = 0, len = items.length; i < len; i++) {\n      if (isNaN(items[i].start) || isNaN(items[i].end)) {\n        config.autoFlow.push(items[i]);\n        continue;\n      }\n      sanitizedItems.push({...items[i]});\n      \n      item = sanitizedItems[validItems];\n      validItems++;\n\n      item.size = isNaN(item.size) ? this._getParentSize(item) : +item.size;\n    }\n\n    sanitizedItems.sort(function (a, b) {\n      let gap1 = a.end - a.start,\n        gap2 = b.end - b.start;\n\n      if (gap1 === gap2) {\n        return a.start - b.start;\n      } else return gap1 - gap2;\n    });\n\n    for (i = 0, nonSpanningItemStartIndex = len = sanitizedItems.length; i < len; i++) {\n      if (sanitizedItems[i].end - sanitizedItems[i].start > 1) {\n        nonSpanningItemStartIndex = i;\n        break;\n      }\n    }\n\n    this._config.nonSpanningItemStartIndex = nonSpanningItemStartIndex;\n\n    return (this._config.sanitizedItems = sanitizedItems);\n  }\n\n  _getParentSize (item) {\n    let { sanitizedTracks } = this._config,\n      parentTracks,\n      widthOfParentTracks = 0;\n\n    parentTracks = sanitizedTracks.filter(track => (track.start >= item.start && track.end <= item.end));\n\n    parentTracks.forEach(track => widthOfParentTracks += track.baseSize);\n\n    return (widthOfParentTracks || 0);\n  }\n\n  resolveTracks () {\n    this._placeNonSpanningItems()\n      ._placeSpanningItems()\n      ._distributeFreeSpace();\n\n    return this._config.sanitizedTracks;\n  }\n\n  _placeNonSpanningItems () {\n    let { sanitizedItems, sanitizedTracks, nonSpanningItemStartIndex } = this._config,\n      nonSpanningItems = sanitizedItems.slice(0, nonSpanningItemStartIndex),\n      track,\n      trackIndex;\n\n    nonSpanningItems.forEach(item => {\n      trackIndex = item.start;\n      track = sanitizedTracks[trackIndex];\n\n      if (track.type !== 'fixed') {\n        track.baseSize = Math.max(track.baseSize, item.size);\n        track.growthLimit = Math.max(track.growthLimit, track.baseSize);\n      }\n    });\n\n    return this;\n  }\n\n  _placeSpanningItems () {\n    let { sanitizedItems, sanitizedTracks, nonSpanningItemStartIndex, frTracks } = this._config,\n      spanningItems = sanitizedItems.slice(nonSpanningItemStartIndex),\n      trackSizedp = [0],\n      sizeConsumed,\n      sizeLeft,\n      sizePerTrack,\n      availableTracks,\n      hasFrTrack,\n      i,\n      len;\n\n    if (!spanningItems.length) return this;\n\n    for (i = 1, len = sanitizedTracks.length; i < len; i++) {\n      trackSizedp[i] = trackSizedp[i - 1] + (sanitizedTracks[i].baseSize || 0);\n    }\n\n    spanningItems.forEach(item => {\n      sizeConsumed = trackSizedp[item.end - 1] - trackSizedp[item.start - 1];\n      sizeLeft = Math.max(0, item.size - sizeConsumed);\n\n      if (!sizeLeft) return;\n\n      for (i = item.start, hasFrTrack = false, availableTracks = 0; i < item.end; i++) {\n        if (frTracks.indexOf(i) >= 0) {\n          hasFrTrack = true;\n        }\n        if (sanitizedTracks[i].type !== 'fixed') {\n          availableTracks++;\n        }\n      }\n\n      if (!availableTracks || hasFrTrack) return;\n\n      sizePerTrack = sizeLeft / availableTracks;\n      for (i = item.start; i < item.end; i++) {\n        if (sanitizedTracks[i].type !== 'fixed') {\n          sanitizedTracks[i].baseSize += sizePerTrack;\n        }\n      }\n    });\n    return this;\n  }\n\n  _distributeFreeSpace () {\n    let { frTracks, intrinsicTracks, sanitizedTracks } = this._config,\n      { containerSize } = this.props,\n      totalSpaceUsed = 0;\n\n    sanitizedTracks.forEach(track => totalSpaceUsed += (track.baseSize || 0));\n\n    if (totalSpaceUsed < containerSize) {\n      if (frTracks.length) {\n        frTracks.forEach((trackId, index) => {frTracks[index] = sanitizedTracks[trackId];});\n        frTracks.forEach(track => totalSpaceUsed -= track.baseSize);\n        _frSpaceDistributorHelper(frTracks, totalSpaceUsed, containerSize);\n      } else if (intrinsicTracks.length) {\n        intrinsicTracks.forEach((trackId, index) => {intrinsicTracks[index] = sanitizedTracks[trackId];});\n        _intrinsicSpaceDistributorHelper(intrinsicTracks, totalSpaceUsed, containerSize);\n      }\n    }\n    return this;\n  }\n\n  clear () {\n    this.props = {};\n    this._config = {\n      frTracks: [],\n      intrinsicTracks: [],\n      autoFlow: []\n    };\n\n    return this;\n  }\n}\n\nexport default TrackResolver;\n","import { computeLayout } from './mason';\n\nexport {\n  computeLayout\n};\n","import { getDisplayProperty, cloneObject, attachLayoutInformation } from \"./utils\";\nimport { DISPLAY_GRID, DISPLAY_FLEX } from \"./utils/constants\";\nimport { computeGridLayout } from \"./grid\";\n\nclass LayoutEngine {\n  constructor () {\n    this.gridLayoutEngine = computeGridLayout;\n  }\n\n  compute (domTree) {\n    switch (getDisplayProperty(domTree)) {\n    \n    case DISPLAY_GRID: return this.gridLayoutEngine(domTree);\n    case DISPLAY_FLEX: return this.gridLayoutEngine(domTree);\n    default:\n      // Probably throw unsupported error?\n      return this.gridLayoutEngine(domTree);\n\n    }\n  }\n}\n\nconst computeLayout = (domTree) => {\n  const mason = new LayoutEngine();\n  let clonedDomTree = cloneObject(domTree),\n    calculatedTree;\n\n  clonedDomTree.root = true;\n  calculatedTree = mason.compute(clonedDomTree);\n  attachLayoutInformation(domTree, calculatedTree);\n\n  return domTree;\n};\n\nexport {\n  computeLayout\n};\n","export const DISPLAY_GRID = 'grid';\nexport const DISPLAY_FLEX = 'flex';\nexport const CENTER = 'center';\nexport const START = 'start';\nexport const END = 'end';\nexport const STRETCH = 'stretch';\nexport const ATOMIC_DATA_TYPE = ['string', 'number', 'function', 'boolean', 'undefined'];","import { ATOMIC_DATA_TYPE } from \"./constants\";\n\nconst getDisplayProperty = (domTree) => {\n    return domTree.style && domTree.style.display;\n  },\n  cloneObject = (arg) => {\n    if ((ATOMIC_DATA_TYPE.indexOf(typeof arg) > -1) || arg === null) {\n      return arg;\n    }\n\n    if (Array.isArray(arg)) {\n      let i,\n        len,\n        arr = [];\n\n      for (i = 0, len = arg.length; i < len; i++) {\n        arr.push(cloneObject(arg[i]));\n      }\n\n      return arr;\n    } else if (typeof arg === 'object') {\n      let cloneObj = {},\n        key;\n\n      for (key in arg) {\n        cloneObj[key] = cloneObject(arg[key]);\n      }\n\n      return cloneObj;\n    }\n  },\n  attachLayoutInformation = (baseTree = {}, calculatedTree = {}) => {\n    let i,\n      len;\n\n    baseTree.layout = calculatedTree.layout;\n\n    for (i = 0, len = (baseTree.children || []).length; i < len; i++) {\n      attachLayoutInformation(baseTree.children[i], calculatedTree.children[i]);\n    }\n  },\n  pluckNumber = function () {\n    var arg,\n      i,\n      l;\n\n    for (i = 0, l = arguments.length; i < l; i += 1) {\n      arg = arguments[i];\n      if (!arg && arg !== false && arg !== 0) {\n        continue;\n      } else if (isNaN(arg = Number(arg))) {\n        continue;\n      }\n      return arg;\n    }\n    return UNDEF;\n  };\n\nexport {\n  cloneObject,\n  attachLayoutInformation,\n  getDisplayProperty,\n  pluckNumber\n};"],"sourceRoot":""}