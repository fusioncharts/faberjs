{"version":3,"sources":["webpack://Mason/webpack/universalModuleDefinition","webpack://Mason/webpack/bootstrap","webpack://Mason/./src/grid/helpers/repeatResolver.js","webpack://Mason/./src/grid/index.js","webpack://Mason/./src/grid/track-sizing.js","webpack://Mason/./src/index.js","webpack://Mason/./src/mason.js","webpack://Mason/./src/utils/constants.js","webpack://Mason/./src/utils/index.js"],"names":["repeatDetectionRegex","parseRepeatFunction","repeatStr","split","map","arg","trim","repeatResolver","domTree","style","children","rowWidth","numOfRows","itemInARow","itemWidth","repeatStyle","newGridTemplateColumns","newGridTemplateRows","i","len","gridTemplateColumns","gridTemplateRows","width","height","isNaN","length","Math","ceil","validSizes","minmaxRegex","templateSplitRegex","getCleanSize","size","test","sizeAr","updateMatrix","grid","start","end","j","x","y","Grid","setup","_tsa","TrackResolver","props","_config","mapping","key","value","_domTree","_sanitizeTracks","_sanitizeItems","_inflateTracks","_assignCoordinatesToCells","repeatResolvedTracks","config","trackInfo","_fetchTrackInformation","row","nameToLineMap","lineToNameMap","rowTracks","tracks","col","colTracks","splittedTrackInfo","nameList","sizeList","sanitizedTracks","startLineNames","endLineNames","filter","track","toLowerCase","replace","indexOf","name","push","forEach","items","gridAutoFlow","rowNum","Object","keys","colNum","sanitizedItems","autoFlowItems","itemStyle","gridMatrix","freeCells","cell","item","extraRows","rowStart","gridRowStart","rowEnd","gridRowEnd","colStart","gridColumnStart","colEnd","gridColumnEnd","shift","sizedTracks","minHeightContribution","minWidthContribution","paddingStart","paddingEnd","paddingTop","paddingBottom","tsa","clear","set","resolveTracks","index","calculatedStyle","baseSize","justifyItems","alignItems","trackWidth","trackHeight","rowTrackdp","colTrackdp","layout","child","justifySelf","CENTER","END","STRETCH","alignSelf","pluckNumber","padding","x2","y2","getDisplayProperty","_updatePositioWRTRoot","replaceWithAbsValue","styleTrack","calculatedTrack","trackSplitAr","trackWithAbsValue","counter","updateDomTreeWithResolvedValues","containerStyle","getConfig","rowTrackSum","colTrackSum","userGivenStyles","computeGridLayout","count","compute","gridLayoutEngine","root","getMultiplierOfFr","_frSpaceDistributorHelper","totalSpaceUsed","containerSize","freeSpace","spacePerFrTrack","eligibleTracks","totalFrTrackRatio","multiplier","_intrinsicSpaceDistributorHelper","spacePerIntrinsicTrack","frozenTrack","minMaxTracks","growthLimit","type","Infinity","sort","a","b","gap1","gap2","min","frozen","info","_initTrackSize","_initItems","_tracks","trackAr","frTracks","intrinsicTracks","Array","isArray","max","_items","nonSpanningItemStartIndex","validItems","autoFlow","_getParentSize","parentTracks","widthOfParentTracks","_placeNonSpanningItems","_placeSpanningItems","_distributeFreeSpace","nonSpanningItems","slice","trackIndex","spanningItems","trackSizedp","sizeConsumed","sizeLeft","sizePerTrack","availableTracks","hasFrTrack","trackId","LayoutEngine","DISPLAY_GRID","DISPLAY_FLEX","computeLayout","mason","clonedDomTree","cloneObject","calculatedTree","attachLayoutInformation","START","ATOMIC_DATA_TYPE","display","arr","cloneObj","baseTree","l","arguments","Number","UNDEF"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Mason\"] = factory();\n\telse\n\t\troot[\"Mason\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const repeatDetectionRegex = /repeat\\(/g,\n  parseRepeatFunction = repeatStr => {\n    return repeatStr.split(/\\(|\\)/g)[1].split(',').map(arg => arg && arg.trim());\n  };\n\nfunction repeatResolver (domTree) {\n  let { style, children } = domTree,\n    rowWidth = 0,\n    numOfRows,\n    itemInARow = 0,\n    itemWidth,\n    repeatStyle,\n    newGridTemplateColumns = '',\n    newGridTemplateRows = '',\n    i,\n    len,\n    { gridTemplateColumns, gridTemplateRows, width, height } = style;\n\n  width = isNaN(+width) ? 0 : +width;\n\n  [repeatStyle, itemWidth] = parseRepeatFunction(gridTemplateColumns);\n  itemWidth = +itemWidth;\n\n  if (repeatStyle === 'auto-fit') {\n    rowWidth += itemWidth;\n    newGridTemplateColumns += (itemWidth + ' ');\n    itemInARow = 1;\n    for (i = 1, len = children.length; i < len; i++) {\n      if (rowWidth + itemWidth > width) {\n        break;\n      }\n      rowWidth += itemWidth;\n      newGridTemplateColumns += (itemWidth + ' ');\n    }\n\n    itemInARow = i;\n    numOfRows = Math.ceil(len / itemInARow);\n\n    while (numOfRows--) {\n      newGridTemplateRows += 'auto ';\n    }\n  }\n\n  return {\n    gridTemplateColumns: newGridTemplateColumns.trim(),\n    gridTemplateRows: newGridTemplateRows.trim()\n  }\n}\n\nexport {\n  repeatResolver\n};\n","import { getDisplayProperty, pluckNumber } from \"../utils\";\nimport TrackResolver from \"./track-sizing\";\nimport { CENTER, END, STRETCH } from \"../utils/constants\";\nimport { repeatResolver } from \"./helpers/repeatResolver\";\n\nconst validSizes = ['auto'],\n  minmaxRegex = /minmax/,\n  // templateSplitRegex = /\\s(\\[.*\\])*(\\(.*\\))*/g,\n  templateSplitRegex = ' ',\n  getCleanSize = size => {\n    size = size.trim();\n    if (size === 'auto') return size;\n    if (!isNaN(+size)) return +size;\n\n    if (minmaxRegex.test(size)) {\n      let sizeAr = size.split(/\\(|\\)/g)[1].split(',');\n\n      return [\n        sizeAr[0].trim(),\n        sizeAr[1].trim()\n      ];\n    }\n\n    return size;\n  },\n  updateMatrix = (grid, start, end) => {\n    let i,\n      j;\n\n    for (i = start.x; i < end.x; i++) {\n      for (j = start.y; j < end.y; j++) {\n        grid[i][j] = true;\n      }\n    }\n  };\nclass Grid {\n  constructor () {\n    this.setup();\n  }\n\n  setup () {\n    this._tsa = new TrackResolver();\n    this.props = {};\n    this._config = {\n      mapping: {}\n    };\n\n    return this;\n  }\n\n  set (key, value) {\n    this.props[key] = value;\n\n    return this;\n  }\n\n  getProps (key) {\n    return this.props[key];\n  }\n\n  getConfig (key) {\n    return this._config[key];\n  }\n\n  compute (_domTree) {\n    let domTree = _domTree || this.props.domTree;\n\n    this._sanitizeTracks(domTree)\n      ._sanitizeItems(domTree)\n      ._inflateTracks()\n      ._assignCoordinatesToCells(domTree);\n  }\n\n  _sanitizeTracks (_domTree = {}) {\n    let style = _domTree.style,\n      { gridTemplateRows, gridTemplateColumns } = style,\n      repeatResolvedTracks,\n      config = this._config,\n      trackInfo;\n\n    if (/repeat\\(/.test(style.gridTemplateColumns)) {\n      repeatResolvedTracks = repeatResolver(_domTree);\n      gridTemplateColumns = repeatResolvedTracks.gridTemplateColumns;\n      gridTemplateRows = repeatResolvedTracks.gridTemplateRows;\n    }\n    trackInfo = this._fetchTrackInformation(gridTemplateRows);\n    config.mapping.row = {\n      nameToLineMap: trackInfo.nameToLineMap,\n      lineToNameMap: trackInfo.lineToNameMap\n    };\n    config.rowTracks = trackInfo.tracks;\n\n    trackInfo = this._fetchTrackInformation(gridTemplateColumns);\n    config.mapping.col = {\n      nameToLineMap: trackInfo.nameToLineMap,\n      lineToNameMap: trackInfo.lineToNameMap\n    };\n    config.colTracks = trackInfo.tracks;\n\n    return this;\n  }\n\n  _fetchTrackInformation (tracks = 'auto') {\n    let i,\n      len,\n      splittedTrackInfo = tracks.split(templateSplitRegex),\n      nameList,\n      sizeList,\n      sanitizedTracks = [{}],\n      startLineNames,\n      endLineNames,\n      nameToLineMap = {},\n      lineToNameMap = {};\n\n    nameList = splittedTrackInfo.filter(track => {\n      if (track && typeof track === 'string' && track.length) {\n        len = track.length;\n        if (track[0] === '[' && track[len - 1] === ']') {\n          return true;\n        }\n        return false;\n      }\n      return true;\n    });\n\n    sizeList = splittedTrackInfo.filter(size => {\n      if (!size) return false;\n\n      len = (size + '').toLowerCase().replace(/px|fr/, '');\n      if (validSizes.indexOf(len) >= 0 || minmaxRegex.test(len) || !isNaN(len)) {\n        return true;\n      }\n      return false;\n    }).map(size => getCleanSize(size));\n\n    for (i = 0, len = sizeList.length; i < len; i++) {\n      startLineNames = (nameList[i] && nameList[i].replace(/\\[|\\]/g, '').split(' ').filter(name => name.length).map(name => name.trim())) || [i + 1 + ''];\n      endLineNames = (nameList[i + 1] && nameList[i + 1].replace(/\\[|\\]/g, '').split(' ').filter(name => name.length).map(name => name.trim())) || [i + 2 + ''];\n\n      sanitizedTracks.push({\n        start: i + 1,\n        end: i + 2,\n        size: sizeList[i],\n      });\n\n      // A line can have multiple names but a name can only be assigned to a single line\n      lineToNameMap[i + 1] = startLineNames;\n      lineToNameMap[i + 2] = endLineNames;\n      startLineNames.forEach(name => nameToLineMap[name] = i + 1);\n      endLineNames.forEach(name => nameToLineMap[name] = i + 2);\n      nameToLineMap[i + 1] = i + 1;\n      nameToLineMap[i + 2] = i + 2;\n    }\n\n    return {\n      tracks: sanitizedTracks,\n      nameToLineMap,\n      lineToNameMap\n    };\n  }\n\n  _sanitizeItems (_domTree) {\n    let domTree = (_domTree || this.props.domTree),\n      items = domTree.children || [],\n      mapping = this._config.mapping,\n      gridAutoFlow = domTree.style.gridAutoFlow || 'row',\n      rowNum = Object.keys(mapping.row.lineToNameMap).length,\n      colNum = Object.keys(mapping.col.lineToNameMap).length,\n      sanitizedItems = [],\n      autoFlowItems = [],\n      itemStyle,\n      gridMatrix = [[]],\n      freeCells = [],\n      cell,\n      item,\n      extraRows,\n      i,\n      j,\n      len;\n\n    for (i = 1; i <= rowNum; i++) {\n      gridMatrix.push([]);\n    }\n    for (i = 0, len = items.length; i < len; i++) {\n      itemStyle = items[i].style;\n\n      sanitizedItems.push({\n        ...items[i],\n        rowStart: mapping.row.nameToLineMap[itemStyle.gridRowStart],\n        rowEnd: mapping.row.nameToLineMap[itemStyle.gridRowEnd],\n        colStart: mapping.col.nameToLineMap[itemStyle.gridColumnStart],\n        colEnd: mapping.col.nameToLineMap[itemStyle.gridColumnEnd]\n      });\n      item = sanitizedItems[i];\n      updateMatrix(gridMatrix, {x: item.colStart, y: item.rowStart}, {x: item.colEnd, y: item.rowEnd});\n    }\n\n    autoFlowItems = sanitizedItems.filter(item => (!item.colStart || !item.rowStart));\n\n    /**\n     * @todo: Scope to improve code here.\n     */\n    if (autoFlowItems) {\n      if (gridAutoFlow === 'row') {\n        for (i = 1; i < rowNum; i++) {\n          for (j = 1; j < colNum; j++) {\n            if (!gridMatrix[i][j]) {\n              freeCells.push({row: i, col: j});\n            }\n          }\n        }\n\n        while (autoFlowItems.length && freeCells.length) {\n          item = autoFlowItems.shift();\n          cell = freeCells.shift();\n\n          item.rowStart = cell.row;\n          item.colStart = cell.col;\n          item.rowEnd = cell.row + 1;\n          item.colEnd = cell.col + 1;\n        }\n\n        extraRows = Math.ceil(autoFlowItems.length / colNum);\n        if (extraRows) {\n          while (extraRows--) {\n            domTree.style.gridTemplateRows += 'auto ';\n            mapping.row.nameToLineMap[rowNum + 1] = rowNum + 1;\n            mapping.row.nameToLineMap[rowNum + 2] = rowNum + 2;\n            rowNum++;\n            gridMatrix.push([]);\n          }\n          domTree.style.gridTemplateRows = domTree.style.gridTemplateRows.trim();\n  \n          freeCells = [];\n          for (i = 1; i <= rowNum; i++) {\n            for (j = 1; j <= colNum; j++) {\n              if (!gridMatrix[i][j]) {\n                freeCells.push({row: i, col: j});\n              }\n            }\n          }\n          while (autoFlowItems.length) {\n            item = autoFlowItems.shift();\n            cell = freeCells.shift();\n\n            item.rowStart = cell.row;\n            item.colStart = cell.col;\n            item.rowEnd = cell.row + 1;\n            item.colEnd = cell.col + 1;\n          }\n        }\n      }\n    }\n\n    this._config.sanitizedItems = sanitizedItems;\n    return this;\n  }\n\n  _expandTracksIfRequired () {\n    return this;\n  }\n\n  _inflateTracks () {\n    let { sanitizedItems, colTracks, rowTracks } = this._config,\n      sizedTracks,\n      minHeightContribution = 0,\n      minWidthContribution = 0,\n      { domTree } = this.props,\n      { paddingStart, paddingEnd, paddingTop, paddingBottom, width, height } = domTree.style || {},\n      tsa = new TrackResolver();\n\n    if (!isNaN(+width)) {\n      width -= (paddingStart + paddingEnd);\n    }\n    sizedTracks = tsa.clear()\n      .set('tracks', colTracks)\n      .set('items', sanitizedItems.map(item => ({\n        start: item.colStart,\n        end: item.colEnd,\n        size: (item.style && (item.style.minWidthContribution || item.style.width)) || 'auto'\n      })))\n      .set('containerSize', width || 'auto')\n      .resolveTracks();\n\n    colTracks.forEach((track, index) => {\n      track.calculatedStyle = sizedTracks[index];\n      minWidthContribution += sizedTracks[index].baseSize || 0;\n    });\n\n    if (!isNaN(+height)) {\n      height -= (paddingTop + paddingBottom);\n    }\n    sizedTracks = tsa.clear()\n      .set('tracks', rowTracks)\n      .set('items', sanitizedItems.map(item => ({\n        start: item.rowStart,\n        end: item.rowEnd,\n        size: (item.style && (item.style.minHeightContribution || item.style.height)) || 'auto'\n      })))\n      .set('containerSize', height || 'auto')\n      .resolveTracks();\n\n    rowTracks.forEach((track, index) => {\n      track.calculatedStyle = sizedTracks[index];\n      minHeightContribution += sizedTracks[index].baseSize || 0;\n    });\n\n    domTree.style.minHeightContribution = minHeightContribution;\n    domTree.style.minWidthContribution = minWidthContribution;\n    return this;\n  }\n\n  _assignCoordinatesToCells (_domTree) {\n    let domTree = _domTree || this.props.domTree,\n      { sanitizedItems, rowTracks, colTracks } = this._config,\n      item,\n      len,\n      i,\n      { justifyItems, alignItems, paddingStart, paddingEnd, paddingTop, paddingBottom } = domTree.style,\n      trackWidth,\n      trackHeight,\n      width,\n      height,\n      x,\n      y,\n      rowTrackdp = [paddingStart],\n      colTrackdp = [paddingTop];\n\n    for (i = 1, len = rowTracks.length; i < len; i++) {\n      rowTrackdp[i] = rowTrackdp[i - 1] + rowTracks[i].calculatedStyle.baseSize;\n    }\n\n    for (i = 1, len = colTracks.length; i < len; i++) {\n      colTrackdp[i] = colTrackdp[i - 1] + colTracks[i].calculatedStyle.baseSize;\n    }\n    domTree.layout = {\n      x: 0,\n      y: 0,\n      width: isNaN(domTree.style.width) ? colTrackdp[colTrackdp.length - 1] : domTree.style.width,\n      height: isNaN(domTree.style.height) ? rowTrackdp[rowTrackdp.length - 1] : domTree.style.height\n    };\n    (domTree.children || []).forEach((child, index) => {\n      item = sanitizedItems[index];\n      trackWidth = colTrackdp[item.colEnd - 1] - colTrackdp[item.colStart - 1];\n      trackHeight = rowTrackdp[item.rowEnd - 1] - rowTrackdp[item.rowStart - 1];\n      \n      width = isNaN(+child.style.width) ? trackWidth : +child.style.width;\n      height = isNaN(+child.style.height) ? trackHeight : +child.style.height;\n\n      switch (justifyItems || child.style.justifySelf) {\n      case CENTER:\n        x = colTrackdp[item.colStart - 1] + (trackWidth / 2) - (width / 2); break;\n      case END:\n        x = colTrackdp[item.colEnd - 1] - width; break;\n      case STRETCH:\n        width = trackWidth;\n        x = colTrackdp[item.colStart - 1]; break;\n      default:\n        x = colTrackdp[item.colStart - 1];\n      }\n\n      switch (alignItems || child.style.alignSelf) {\n      case CENTER:\n        y = rowTrackdp[item.rowStart - 1] + (trackHeight / 2) - (height / 2); break;\n      case END:\n        y = rowTrackdp[item.rowEnd - 1] - height; break;\n      case STRETCH:\n        height = trackHeight;\n        y = rowTrackdp[item.rowStart - 1]; break;\n      default:\n        y = rowTrackdp[item.rowStart - 1];\n      }\n\n      x += pluckNumber(item.style.paddingStart, item.style.padding, 0);\n      y += pluckNumber(item.style.paddingTop, item.style.padding, 0);\n\n      child.layout = {\n        x,\n        y,\n        x2: x + width,\n        y2: y + height,\n        width,\n        height\n      };\n    });\n  }\n\n  _updatePositioWRTRoot (_domTree) {\n    let domTree = _domTree || this.props.domTree,\n      children = domTree.children || [];\n\n    domTree.layout.x = domTree.layout.x || 0;\n    domTree.layout.y = domTree.layout.y || 0;\n\n    children.forEach(child => {\n      child.layout.x = (child.layout.x || 0) + domTree.layout.x;\n      child.layout.x2 = (child.layout.x2 || 0) + domTree.layout.x;\n      child.layout.y = (child.layout.y || 0) + domTree.layout.y;\n      child.layout.y2 = (child.layout.y2 || 0) + domTree.layout.y;\n\n      if (getDisplayProperty(child) === 'grid') {\n        this._updatePositioWRTRoot(child);\n      }\n    });\n  }\n}\n\nconst replaceWithAbsValue = (styleTrack = '', calculatedTrack) => {\n    let trackSplitAr = styleTrack.split(templateSplitRegex).filter(track => track && !!track.trim()),\n      trackWithAbsValue = '',\n      counter = 1;\n\n    if (trackSplitAr.length && !(/repeat\\(/.test(styleTrack))) {\n      trackSplitAr.forEach(track => {\n        if (validSizes.indexOf(track) > -1 || /[0-9]fr/.test(track) || minmaxRegex.test(track) || !isNaN(track)) {\n          trackWithAbsValue += calculatedTrack[counter].calculatedStyle.baseSize + ' ';\n          counter++;\n        } else {\n          trackWithAbsValue += track + ' ';\n        }\n      });\n    } else {\n      calculatedTrack.forEach(track => {\n        if (isNaN(track.calculatedStyle.baseSize)) return;\n        \n        trackWithAbsValue += (track.calculatedStyle.baseSize + ' ');\n      });\n    }\n\n    return trackWithAbsValue.trim();\n  },\n  updateDomTreeWithResolvedValues = (domTree, grid) => {\n    let containerStyle = domTree.style,\n      rowTracks = grid.getConfig('rowTracks'),\n      colTracks = grid.getConfig('colTracks'),\n      mapping = grid.getConfig('mapping'),\n      { gridTemplateRows, gridTemplateColumns } = containerStyle,\n      child,\n      i,\n      j,\n      len,\n      rowTrackSum,\n      colTrackSum,\n      rowStart,\n      rowEnd,\n      colStart,\n      colEnd;\n\n    domTree.style.gridTemplateRows = replaceWithAbsValue(gridTemplateRows, rowTracks);\n    domTree.style.gridTemplateColumns = replaceWithAbsValue(gridTemplateColumns, colTracks);\n\n    for (i = 0, len = (domTree.children || []).length; i < len; i++) {\n      child = domTree.children[i];\n      if (getDisplayProperty(child)) {\n        child.style.gridTemplateColumns = child.userGivenStyles.gridTemplateColumns;\n        child.style.gridTemplateRows = child.userGivenStyles.gridTemplateRows;\n        if (isNaN(child.userGivenStyles.width)) {\n          colStart = child.style.gridColumnStart;\n          colEnd = child.style.gridColumnEnd;\n\n          colStart = mapping.col.nameToLineMap[colStart];\n          colEnd = mapping.col.nameToLineMap[colEnd];\n\n          for (j = colStart, colTrackSum = 0; j < colEnd; j++) {\n            colTrackSum += colTracks[j].calculatedStyle.baseSize;\n          }\n          child.style.width = colTrackSum;\n        }\n        if (isNaN(child.userGivenStyles.height)) {\n          rowStart = child.style.gridRowStart;\n          rowEnd = child.style.gridRowEnd;\n\n          rowStart = mapping.row.nameToLineMap[rowStart];\n          rowEnd = mapping.row.nameToLineMap[rowEnd];\n          \n          for (j = rowStart, rowTrackSum = 0; j < rowEnd; j++) {\n            rowTrackSum += rowTracks[j].calculatedStyle.baseSize;\n          }\n          child.style.height = rowTrackSum;\n        }\n      }\n    }\n\n    return domTree;\n  };\n\nfunction computeGridLayout (domTree, count = 1) {\n  let i,\n    len,\n    style = domTree.style,\n    child,\n    grid;\n\n  if (!domTree || !domTree.style) {\n    return;\n  }\n\n  if (!domTree.userGivenStyles) {\n    domTree.style.width = isNaN(domTree.style.width) ? 'auto' : domTree.style.width;\n    domTree.style.height = isNaN(domTree.style.height) ? 'auto' : domTree.style.height;\n\n    style.paddingStart = pluckNumber(style.paddingStart, style.padding, 0);\n    style.paddingEnd = pluckNumber(style.paddingEnd, style.padding, 0);\n    style.paddingTop = pluckNumber(style.paddingTop, style.padding, 0);\n    style.paddingBottom = pluckNumber(style.paddingBottom, style.padding, 0);\n\n    domTree.userGivenStyles = {\n      gridTemplateColumns: domTree.style.gridTemplateColumns,\n      gridTemplateRows: domTree.style.gridTemplateRows,\n      width: domTree.style.width,\n      height: domTree.style.height\n    };\n  }\n\n  for (i = 0, len = (domTree.children && domTree.children.length); i < len; i++) {\n    child = domTree.children[i];\n    if (getDisplayProperty(child)) {\n      this.compute(child);\n    }\n  }\n\n  grid = new Grid();\n  grid.set('domTree', domTree)\n    .compute();\n\n  if (count < 2) {\n    this.gridLayoutEngine(updateDomTreeWithResolvedValues(domTree, grid), 2);\n    domTree.root && grid._updatePositioWRTRoot(domTree);\n  }\n\n  return domTree;\n}\n\nexport {\n  computeGridLayout\n};\n","import { pluckNumber } from \"../utils\";\n\nconst getMultiplierOfFr = size => +size.replace(/fr/, ''),\n  _frSpaceDistributorHelper = (tracks, totalSpaceUsed, containerSize) => {\n    let freeSpace,\n      spacePerFrTrack,\n      eligibleTracks,\n      totalFrTrackRatio = 0;\n      \n    if (!tracks.length) {\n      return;\n    }\n\n    tracks.forEach(track => totalFrTrackRatio += track.multiplier);\n\n    freeSpace = containerSize - totalSpaceUsed;\n    spacePerFrTrack = freeSpace / totalFrTrackRatio;\n    \n    eligibleTracks = tracks.filter(track => track.baseSize <= track.multiplier * spacePerFrTrack);\n\n    if (eligibleTracks.length < tracks.length) {\n      tracks.filter(track => track.baseSize > track.multiplier * spacePerFrTrack).forEach(track => totalSpaceUsed += track.baseSize);\n      return _frSpaceDistributorHelper(eligibleTracks, totalSpaceUsed, containerSize);\n    } else {\n      eligibleTracks.forEach(track => track.baseSize = track.multiplier * spacePerFrTrack);\n    }\n  },\n  _intrinsicSpaceDistributorHelper = (tracks, totalSpaceUsed, containerSize) => {\n    let freeSpace,\n      spacePerIntrinsicTrack,\n      i,\n      len,\n      frozenTrack = 0,\n      minMaxTracks,\n      growthLimit,\n      baseSize;\n      \n    if (!tracks.length) {\n      return;\n    }\n    minMaxTracks = tracks.filter(track => track.type === 'minmax' && track.growthLimit !== Infinity);\n    freeSpace = containerSize - totalSpaceUsed;\n    \n    minMaxTracks.sort(function (a, b) {\n      let gap1 = a.growthLimit - a.baseSize,\n      gap2 = b.growthLimit - b.baseSize;\n      \n      return gap1 - gap2;\n    });\n    \n    len = minMaxTracks.length;\n    while (frozenTrack < len && freeSpace) {\n      spacePerIntrinsicTrack = freeSpace / ((minMaxTracks.length - frozenTrack) || 1);\n      /**\n       * @todo: remove the frozen tracks.\n       */\n      for (i = 0, len = minMaxTracks.length; i <  len; i++) {\n        growthLimit = minMaxTracks[i].growthLimit;\n        \n        baseSize = Math.min(spacePerIntrinsicTrack + minMaxTracks[i].baseSize, growthLimit);\n        freeSpace -= (baseSize - minMaxTracks[i].baseSize);\n        minMaxTracks[i].baseSize = baseSize;\n\n        if (growthLimit === baseSize && !minMaxTracks[i].frozen) {\n          minMaxTracks[i].frozen = true;\n          frozenTrack++;\n        }\n      }\n    }\n\n    tracks = tracks.filter(track => (track.type === 'minmax' && track.growthLimit === Infinity) || track.type !== 'minmax');\n    spacePerIntrinsicTrack = freeSpace / tracks.length;\n\n    tracks.forEach(track => track.baseSize += spacePerIntrinsicTrack);\n  };\n\nclass TrackResolver {\n  constructor (tracks = [], items = [], containerSize = 600) {\n    this.clear();\n\n    this.set('tracks', tracks);\n    this.set('items', items);\n    this.set('containerSize', containerSize);\n    return this;\n  }\n\n  set (key, info) {\n    this.props[key] = info;\n\n    switch (key) {\n    case 'tracks':\n      this._initTrackSize(); break;\n    case 'items':\n      this._initItems(); break;\n    case 'containerSize': \n      this.props[key] = isNaN(+info) ? 0 : +info;\n    }\n    return this;\n  }\n\n  get (key) {\n    return this.props[key];\n  }\n\n  _initTrackSize (_tracks) {\n    let tracks = _tracks || this.props.tracks || [],\n      config = this._config,\n      trackAr = [{}],\n      i,\n      len,\n      size,\n      type,\n      multiplier,\n      baseSize,\n      growthLimit;\n\n    config.frTracks = [];\n    config.intrinsicTracks = [];\n\n    for (i = 1, len = tracks.length; i < len; i++) {\n      size = tracks[i].size;\n\n      multiplier = 1;\n      if (Array.isArray(size)) {\n        baseSize = +size[0] || 0;\n\n        if (size[1].indexOf('fr') > 0 || size[0].indexOf('fr') > 0) {\n          growthLimit = Infinity;\n          config.frTracks.push(i);\n          type = 'minmax';\n        } else if (size[1] === 'auto' || size[0] === 'auto') {\n          growthLimit = Infinity;\n          config.intrinsicTracks.push(i);\n          type = 'minmax';\n        } else if (!isNaN(+size[0]) && !isNaN(+size[1])) {\n          growthLimit = Math.max(+size[0], +size[1]);\n          baseSize = Math.min(+size[0], +size[1]);\n          config.intrinsicTracks.push(i);\n          type = 'minmax'\n        }\n      } else if (!isNaN(+size)) {\n        baseSize = growthLimit = +size;\n        type = 'fixed';\n      } else if (size.indexOf('fr') > 0) {\n        baseSize = 0\n        growthLimit = Infinity;\n        config.frTracks.push(i);\n        type = 'flex';\n        multiplier = getMultiplierOfFr(size);\n      } else {\n        baseSize = 0;\n        growthLimit = Infinity;\n        type = 'intrinsic';\n        config.intrinsicTracks.push(i);\n      }\n\n      trackAr.push({\n        ...tracks[i],\n        type,\n        multiplier,\n        baseSize,\n        growthLimit\n      });\n    }\n\n    return (config.sanitizedTracks = trackAr);\n  }\n\n  _initItems (_items) {\n    let items = _items || this.props.items || [],\n      config = this._config,\n      sanitizedItems = [],\n      nonSpanningItemStartIndex,\n      item,\n      validItems = 0,\n      i,\n      len;\n\n    for (i = 0, len = items.length; i < len; i++) {\n      if (isNaN(items[i].start) || isNaN(items[i].end)) {\n        config.autoFlow.push(items[i]);\n        continue;\n      }\n      sanitizedItems.push({...items[i]});\n      \n      item = sanitizedItems[validItems];\n      validItems++;\n\n      item.size = isNaN(item.size) ? this._getParentSize(item) : +item.size;\n    }\n\n    sanitizedItems.sort(function (a, b) {\n      let gap1 = a.end - a.start,\n        gap2 = b.end - b.start;\n\n      if (gap1 === gap2) {\n        return a.start - b.start;\n      } else return gap1 - gap2;\n    });\n\n    for (i = 0, nonSpanningItemStartIndex = len = sanitizedItems.length; i < len; i++) {\n      if (sanitizedItems[i].end - sanitizedItems[i].start > 1) {\n        nonSpanningItemStartIndex = i;\n        break;\n      }\n    }\n\n    this._config.nonSpanningItemStartIndex = nonSpanningItemStartIndex;\n\n    return (this._config.sanitizedItems = sanitizedItems);\n  }\n\n  _getParentSize (item) {\n    let { sanitizedTracks } = this._config,\n      parentTracks,\n      widthOfParentTracks = 0;\n\n    parentTracks = sanitizedTracks.filter(track => (track.start >= item.start && track.end <= item.end));\n\n    parentTracks.forEach(track => widthOfParentTracks += track.baseSize);\n\n    return (widthOfParentTracks || 0);\n  }\n\n  resolveTracks () {\n    this._placeNonSpanningItems()\n      ._placeSpanningItems()\n      ._distributeFreeSpace();\n\n    return this._config.sanitizedTracks;\n  }\n\n  _placeNonSpanningItems () {\n    let { sanitizedItems, sanitizedTracks, nonSpanningItemStartIndex } = this._config,\n      nonSpanningItems = sanitizedItems.slice(0, nonSpanningItemStartIndex),\n      track,\n      trackIndex;\n\n    nonSpanningItems.forEach(item => {\n      trackIndex = item.start;\n      track = sanitizedTracks[trackIndex];\n\n      if (track.type !== 'fixed') {\n        track.baseSize = Math.max(track.baseSize, item.size);\n        track.growthLimit = Math.max(track.growthLimit, track.baseSize);\n      }\n    });\n\n    return this;\n  }\n\n  _placeSpanningItems () {\n    let { sanitizedItems, sanitizedTracks, nonSpanningItemStartIndex, frTracks } = this._config,\n      spanningItems = sanitizedItems.slice(nonSpanningItemStartIndex),\n      trackSizedp = [0],\n      sizeConsumed,\n      sizeLeft,\n      sizePerTrack,\n      availableTracks,\n      hasFrTrack,\n      i,\n      len;\n\n    if (!spanningItems.length) return this;\n\n    for (i = 1, len = sanitizedTracks.length; i < len; i++) {\n      trackSizedp[i] = trackSizedp[i - 1] + (sanitizedTracks[i].baseSize || 0);\n    }\n\n    spanningItems.forEach(item => {\n      sizeConsumed = trackSizedp[item.end - 1] - trackSizedp[item.start - 1];\n      sizeLeft = Math.max(0, item.size - sizeConsumed);\n\n      if (!sizeLeft) return;\n\n      for (i = item.start, hasFrTrack = false, availableTracks = 0; i < item.end; i++) {\n        if (frTracks.indexOf(i) >= 0) {\n          hasFrTrack = true;\n        }\n        if (sanitizedTracks[i].type !== 'fixed') {\n          availableTracks++;\n        }\n      }\n\n      if (!availableTracks || hasFrTrack) return;\n\n      sizePerTrack = sizeLeft / availableTracks;\n      for (i = item.start; i < item.end; i++) {\n        if (sanitizedTracks[i].type !== 'fixed') {\n          sanitizedTracks[i].baseSize += sizePerTrack;\n        }\n      }\n    });\n    return this;\n  }\n\n  _distributeFreeSpace () {\n    let { frTracks, intrinsicTracks, sanitizedTracks } = this._config,\n      { containerSize } = this.props,\n      totalSpaceUsed = 0;\n\n    sanitizedTracks.forEach(track => totalSpaceUsed += (track.baseSize || 0));\n\n    if (totalSpaceUsed < containerSize) {\n      if (frTracks.length) {\n        frTracks.forEach((trackId, index) => {frTracks[index] = sanitizedTracks[trackId];});\n        frTracks.forEach(track => totalSpaceUsed -= track.baseSize);\n        _frSpaceDistributorHelper(frTracks, totalSpaceUsed, containerSize);\n      } else if (intrinsicTracks.length) {\n        intrinsicTracks.forEach((trackId, index) => {intrinsicTracks[index] = sanitizedTracks[trackId];});\n        _intrinsicSpaceDistributorHelper(intrinsicTracks, totalSpaceUsed, containerSize);\n      }\n    }\n    return this;\n  }\n\n  clear () {\n    this.props = {};\n    this._config = {\n      frTracks: [],\n      intrinsicTracks: [],\n      autoFlow: []\n    };\n\n    return this;\n  }\n}\n\nexport default TrackResolver;\n","import { computeLayout } from './mason';\n\nexport {\n  computeLayout\n};\n","import { getDisplayProperty, cloneObject, attachLayoutInformation } from \"./utils\";\nimport { DISPLAY_GRID, DISPLAY_FLEX } from \"./utils/constants\";\nimport { computeGridLayout } from \"./grid\";\n\nclass LayoutEngine {\n  constructor () {\n    this.gridLayoutEngine = computeGridLayout;\n  }\n\n  compute (domTree) {\n    switch (getDisplayProperty(domTree)) {\n    \n    case DISPLAY_GRID: return this.gridLayoutEngine(domTree);\n    case DISPLAY_FLEX: return this.gridLayoutEngine(domTree);\n    default:\n      // Probably throw unsupported error?\n      return this.gridLayoutEngine(domTree);\n\n    }\n  }\n}\n\nconst computeLayout = (domTree) => {\n  const mason = new LayoutEngine();\n  let clonedDomTree = cloneObject(domTree),\n    calculatedTree;\n\n  clonedDomTree.root = true;\n  calculatedTree = mason.compute(clonedDomTree);\n  attachLayoutInformation(domTree, calculatedTree);\n\n  return domTree;\n};\n\nexport {\n  computeLayout\n};\n","export const DISPLAY_GRID = 'grid';\nexport const DISPLAY_FLEX = 'flex';\nexport const CENTER = 'center';\nexport const START = 'start';\nexport const END = 'end';\nexport const STRETCH = 'stretch';\nexport const ATOMIC_DATA_TYPE = ['string', 'number', 'function', 'boolean', 'undefined'];","import { ATOMIC_DATA_TYPE } from \"./constants\";\n\nconst getDisplayProperty = (domTree) => {\n    return domTree.style && domTree.style.display;\n  },\n  cloneObject = (arg) => {\n    if ((ATOMIC_DATA_TYPE.indexOf(typeof arg) > -1) || arg === null) {\n      return arg;\n    }\n\n    if (Array.isArray(arg)) {\n      let i,\n        len,\n        arr = [];\n\n      for (i = 0, len = arg.length; i < len; i++) {\n        arr.push(cloneObject(arg[i]));\n      }\n\n      return arr;\n    } else if (typeof arg === 'object') {\n      let cloneObj = {},\n        key;\n\n      for (key in arg) {\n        cloneObj[key] = cloneObject(arg[key]);\n      }\n\n      return cloneObj;\n    }\n  },\n  attachLayoutInformation = (baseTree = {}, calculatedTree = {}) => {\n    let i,\n      len;\n\n    baseTree.layout = calculatedTree.layout;\n\n    for (i = 0, len = (baseTree.children || []).length; i < len; i++) {\n      attachLayoutInformation(baseTree.children[i], calculatedTree.children[i]);\n    }\n  },\n  pluckNumber = function () {\n    var arg,\n      i,\n      l;\n\n    for (i = 0, l = arguments.length; i < l; i += 1) {\n      arg = arguments[i];\n      if (!arg && arg !== false && arg !== 0) {\n        continue;\n      } else if (isNaN(arg = Number(arg))) {\n        continue;\n      }\n      return arg;\n    }\n    return UNDEF;\n  };\n\nexport {\n  cloneObject,\n  attachLayoutInformation,\n  getDisplayProperty,\n  pluckNumber\n};"],"sourceRoot":""}